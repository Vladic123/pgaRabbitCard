{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/thinktanker/Downloads/pgaRabbitCard-master/rabbitfront1/components/model.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { TabView, SceneMap, TabBar } from \"react-native-tab-view\";\n\nvar FirstRoute = function FirstRoute() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: \"#fff\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 26\n    }\n  });\n};\n\nvar SecondRoute = function SecondRoute() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: \"#fff\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 27\n    }\n  });\n};\n\nvar ThirdRoute = function ThirdRoute() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: \"#fff\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 26\n    }\n  });\n};\n\nvar renderScene = SceneMap({\n  0: FirstRoute,\n  1: SecondRoute,\n  2: ThirdRoute\n});\n\nvar model = function model(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      index = _useState2[0],\n      setIndex = _useState2[1];\n\n  var _useState3 = useState([{\n    key: 0,\n    title: \"First\",\n    activeTab: 0\n  }, {\n    key: 1,\n    title: \"Second\",\n    activeTab: 1\n  }, {\n    key: 2,\n    title: \"Third\",\n    activeTab: 2\n  }]),\n      _useState4 = _slicedToArray(_useState3, 1),\n      routes = _useState4[0];\n\n  console.log('route', routes.title);\n  return React.createElement(View, {\n    style: styles.centeredView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    style: styles.modelStyle,\n    onRequestClose: function onRequestClose() {\n      Alert.alert(\"Modal has been closed.\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.modalText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 40\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Sam Burns\"), React.createElement(View, {\n    style: {\n      height: 1,\n      backgroundColor: \"green\",\n      width: 50,\n      marginVertical: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.modelView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.approchTxt,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"APPROACH RANKING\"), React.createElement(Text, {\n    style: styles.rankTxt,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"#99\")), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: index ? \"#B5B7B9\" : 'red',\n      height: 5,\n      width: \"33.3%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      backgroundColor: index ? \"#B5B7B9\" : 'red',\n      height: 5,\n      width: \"33.3%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      backgroundColor: index ? \"#B5B7B9\" : 'red',\n      height: 5,\n      width: \"33.3%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  })), React.createElement(TabView, {\n    navigationState: {\n      index: index,\n      routes: routes\n    },\n    renderScene: renderScene,\n    onIndexChange: setIndex,\n    renderTabBar: function renderTabBar(props) {\n      return React.createElement(TabBar, _extends({}, props, {\n        style: {\n          backgroundColor: \"#fff\"\n        },\n        indicatorStyle: {\n          backgroundColor: \"#fff\",\n          height: 2\n        },\n        activeColor: \"#78BA31\",\n        inactiveColor: \"#B5B7B9\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 19\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  })))), React.createElement(TouchableOpacity, {\n    style: styles.openButton,\n    onPress: function onPress() {\n      setModalVisible(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \"Show Modal\")));\n};\n\nexport default model;\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["/Users/thinktanker/Downloads/pgaRabbitCard-master/rabbitfront1/components/model.js"],"names":["React","useState","useEffect","TabView","SceneMap","TabBar","FirstRoute","flex","backgroundColor","SecondRoute","ThirdRoute","renderScene","model","navigation","index","setIndex","key","title","activeTab","routes","console","log","styles","centeredView","modalVisible","modelStyle","Alert","alert","modalView","modalText","fontSize","height","width","marginVertical","modelView","approchTxt","rankTxt","flexDirection","props","openButton","setModalVisible","textStyle","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  SafeAreaView,\n  ScrollView,\n  TouchableOpacity,\n  FlatList,\n  Modal,\n} from \"react-native\";\n\nimport { TabView, SceneMap, TabBar } from \"react-native-tab-view\";\n\n\nconst FirstRoute = () => <View style={{ flex: 1, backgroundColor: \"#fff\" }} />;\n\nconst SecondRoute = () => <View style={{ flex: 1, backgroundColor: \"#fff\" }} />;\nconst ThirdRoute = () => <View style={{ flex: 1, backgroundColor: \"#fff\" }} />;\nconst renderScene = SceneMap({\n  0: FirstRoute,\n  1: SecondRoute,\n  2: ThirdRoute,\n});\n\nconst model = ({ navigation }) => {\n  \n  const [index, setIndex] = useState(0);\n  const [routes] = useState([\n    { key: 0, title: \"First\",activeTab:0 },\n    { key: 1, title: \"Second\",activeTab:1 },\n    { key: 2, title: \"Third\",activeTab:2 },\n  ]);\n  console.log('route',routes.title);\n \n\n  return (\n   \n      <View style={styles.centeredView}>\n        <Modal\n          animationType=\"slide\"\n          transparent={true}\n          visible={modalVisible}\n          style={styles.modelStyle}\n          onRequestClose={() => {\n            Alert.alert(\"Modal has been closed.\");\n          }}\n        >\n          <View style={styles.centeredView}>\n            <View style={styles.modalView}>\n              <View style={styles.modalText}>\n                <Text style={{ fontSize: 40 }}>Sam Burns</Text>\n                <View\n                  style={{\n                    height: 1,\n                    backgroundColor: \"green\",\n                    width: 50,\n                    marginVertical: 10,\n                  }}\n                />\n              </View>\n              <View style={styles.modelView}>\n                <Text style={styles.approchTxt}>APPROACH RANKING</Text>\n                <Text style={styles.rankTxt}>#99</Text>\n              </View>\n              <View style={{ flexDirection: \"row\" }}>\n                <View\n                  style={{\n                    backgroundColor: index? \"#B5B7B9\":'red',\n                    height: 5,\n                    width: \"33.3%\",\n                  }}\n                />\n                <View\n                  style={{\n                    backgroundColor: index? \"#B5B7B9\":'red',\n                    height: 5,\n                    width: \"33.3%\",\n                  }}\n                />\n                <View\n                  style={{\n                    backgroundColor: index? \"#B5B7B9\":'red',\n                    height: 5,\n                    width: \"33.3%\",\n                  }}\n                />\n              </View>\n              <TabView\n                navigationState={{ index, routes }}\n                renderScene={renderScene}\n                onIndexChange={setIndex}\n                renderTabBar={(props) => (\n                  <TabBar\n                    {...props}\n                    style={{ backgroundColor: \"#fff\" }}\n                    indicatorStyle={{ backgroundColor: \"#fff\", height: 2 }}\n                    activeColor={\"#78BA31\"}\n                    inactiveColor={\"#B5B7B9\"}\n                  />\n                )}\n              />\n              {/* <TouchableOpacity\n              style={{  backgroundColor: '#2196F3', }}\n              onPress={() => {\n                setModalVisible(!modalVisible);\n              }}>\n              <Text style={styles.textStyle}>Hide Modal</Text>\n            </TouchableOpacity> */}\n            </View>\n          </View>\n        </Modal>\n\n        <TouchableOpacity\n          style={styles.openButton}\n          onPress={() => {\n            setModalVisible(true);\n          }}\n        >\n          <Text style={styles.textStyle}>Show Modal</Text>\n        </TouchableOpacity>\n      </View>\n  );\n};\n\n\n\nexport default (model);\n\nconst styles = StyleSheet.create({\n  \n//   centeredView: {\n//     backgroundColor: \"#2E2A2B\",\n//   },\n//   modalView: {\n//     height: Platform.OS == \"android\" ? \"85%\" : \"87%\",\n//     width: \"100%\",\n//     marginTop: \"auto\",\n//     backgroundColor: 'White',\n//     borderTopLeftRadius: 35,\n//     borderTopRightRadius: 35,\n//   },\n//   modalText: {\n//     paddingTop: 30,\n//     paddingLeft: 30,\n//   },\n//   modelView: {\n//     backgroundColor: \"#E6E6E6\",\n//     height: 100,\n//     justifyContent: \"space-evenly\",\n//     flexDirection: \"row\",\n//     alignItems: \"center\",\n//   },\n//   approchTxt: {\n//     fontSize: 25,\n//     fontWeight: \"bold\",\n//   },\n//   rankTxt: {\n//     fontSize: 25,\n//     fontSize: 25,\n//     fontWeight: \"bold\",\n//   },\n});\n"]},"metadata":{},"sourceType":"module"}