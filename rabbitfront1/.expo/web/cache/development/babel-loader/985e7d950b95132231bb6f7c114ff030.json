{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/thinktanker/Downloads/pgaRabbitCard-master/rabbitfront1/Modules/Paring.js\";\n\nimport React, { Component, useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useIsFocused } from '@react-navigation/native';\nimport * as Progress from 'react-native-progress';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { getHoleGolfers, getTournamentById, getGroupingsPar3s, userCTTPPick } from \"../store/redux/tournaments/actions\";\nimport { BackButton, Button, Menu, Round, SeparateButton } from \"../components/Button\";\nimport { CheckedIcon, UnCheckedIcon, UnderlineIcon } from \"../components/icons\";\nimport { CommonColors, CommonStyles } from \"./style\";\nimport { w, h } from \"../utils/scale\";\n\nvar PairingPlayer = function PairingPlayer(_ref) {\n  var percent = _ref.percent,\n      golfer = _ref.golfer,\n      selectedId = _ref.selectedId,\n      onPress = _ref.onPress,\n      onCheck = _ref.onCheck;\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 78\n    }\n  }, React.createElement(View, {\n    style: styles.row,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 3\n    }\n  }, React.createElement(Progress.Bar, {\n    borderRadius: 0,\n    progress: 1,\n    color: percent > 0.5 ? CommonColors.Green : CommonColors.Red,\n    width: w(540 * percent),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }), React.createElement(Text, {\n    style: [CommonStyles.sectionTitle, {\n      paddingLeft: 20\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, percent * 100, \"%\")), React.createElement(View, {\n    style: styles.playerRow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: onPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: [CommonStyles.subTitle, {\n      textDecorationLine: 'underline'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, golfer.first_name, \" \", golfer.last_name)), React.createElement(TouchableOpacity, {\n    onPress: onCheck,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, golfer.p_id === selectedId ? React.createElement(CheckedIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 37\n    }\n  }) : React.createElement(UnCheckedIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 55\n    }\n  }))));\n};\n\nvar Pairing = function Pairing(_ref2) {\n  var _route$params, _card$tournament;\n\n  var navigation = _ref2.navigation,\n      route = _ref2.route;\n  var step = ((_route$params = route.params) == null ? void 0 : _route$params.step) || 1;\n  var card = route.params.card;\n  var isFocused = useIsFocused();\n  var dispatch = useDispatch();\n  var state = useSelector(function (state) {\n    return state.tournaments;\n  });\n  var auth = useSelector(function (state) {\n    return state.auth;\n  });\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      golfers = _useState2[0],\n      setGolfers = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedGolferId = _useState4[0],\n      setGolfer = _useState4[1];\n\n  var hole = state.holes[step - 1];\n  useEffect(function () {\n    var payload = {\n      t_id: card.t_id,\n      round: card.round,\n      group_id: card.group_id || 1,\n      hole_number: state.holes[step - 1]['hole_number']\n    };\n    dispatch(getHoleGolfers(payload));\n  }, [step]);\n  useEffect(function () {\n    if (state.holeGolfers && state.holeGolfers.length !== 0) {\n      setGolfers(state.holeGolfers);\n      setGolfer(state.holeGolfers[0].p_id);\n    }\n  }, [state.holeGolfers]);\n\n  var nextPairing = function nextPairing() {\n    var payload = {\n      \"user_id\": auth.user.id,\n      \"t_id\": card.t_id,\n      \"hole\": hole.hole_number,\n      \"round\": card.round,\n      \"group_id\": card.group_id,\n      \"p_id\": selectedGolferId\n    };\n    dispatch(userCTTPPick(payload));\n    navigation.navigate('Pairings', {\n      step: step + 1,\n      card: card\n    });\n  };\n\n  return React.createElement(View, {\n    style: CommonStyles.overflowContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, React.createElement(BackButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), React.createElement(SafeAreaView, {\n    style: CommonStyles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    style: CommonStyles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: [CommonStyles.padding, CommonStyles.paddingT100],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: CommonStyles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Rabbit Card PAIRINGS\"), React.createElement(View, {\n    style: styles.padding20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, React.createElement(UnderlineIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: styles.section,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: CommonStyles.sectionTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, (card == null ? void 0 : (_card$tournament = card.tournament) == null ? void 0 : _card$tournament.name) || ''), React.createElement(Text, {\n    style: CommonStyles.rowTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, new Date(card.tournament.start_date).toDateString() || \"\", \" - \", new Date(card == null ? void 0 : card.tournament.end_date).toDateString() || \"\")), React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, React.createElement(Round, {\n    step: card.round,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: CommonStyles.subTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, \"HOLE \", hole.hole_number, \": PAR \", hole.par, \", \", hole.yardage, \" YARDS PAIRING \", step), React.createElement(Text, {\n    style: CommonStyles.smallText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"Select one player to be closest to the pin. See our expert recommentaions.\"))), golfers.map(function (golfer, index) {\n    return React.createElement(PairingPlayer, {\n      key: index,\n      golfer: golfer,\n      percent: 0.25 * (index + 1),\n      selectedId: selectedGolferId,\n      onPress: function onPress() {\n        return navigation.navigate('PlayerProfile', {\n          profile: golfer\n        });\n      },\n      onCheck: function onCheck() {\n        return setGolfer(golfer.p_id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    });\n  }))), step !== 4 ? React.createElement(Button, {\n    title: \"NEXT PAIRING\",\n    onPress: function onPress() {\n      return nextPairing();\n    },\n    backgroundColor: CommonColors.Green,\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }) : React.createElement(SeparateButton, {\n    prevTitle: \"TOURNAMENTS\",\n    nextTitle: \"RABBIT CARD\",\n    prev: function prev() {\n      return navigation.goBack();\n    },\n    next: function next() {\n      return navigation.navigate('ReadyToPlaySummary', {\n        card: card\n      });\n    },\n    backgroundColor: CommonColors.Green,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.tournaments.loading,\n    error: state.tournaments.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getHoleGolfers: getHoleGolfers,\n  userCTTPPick: userCTTPPick\n})(Pairing);\nvar styles = StyleSheet.create({\n  padding20: {\n    paddingVertical: w(20)\n  },\n  paddingH40: {\n    paddingHorizontal: w(40),\n    paddingVertical: w(10)\n  },\n  topSection: {\n    paddingTop: w(20)\n  },\n  section: {\n    paddingVertical: w(40)\n  },\n  container: {\n    justifyContent: 'center'\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  playerRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingHorizontal: w(40),\n    paddingVertical: w(20)\n  }\n});","map":{"version":3,"sources":["/Users/thinktanker/Downloads/pgaRabbitCard-master/rabbitfront1/Modules/Paring.js"],"names":["React","Component","useEffect","useState","useIsFocused","Progress","connect","useDispatch","useSelector","getHoleGolfers","getTournamentById","getGroupingsPar3s","userCTTPPick","BackButton","Button","Menu","Round","SeparateButton","CheckedIcon","UnCheckedIcon","UnderlineIcon","CommonColors","CommonStyles","w","h","PairingPlayer","percent","golfer","selectedId","onPress","onCheck","styles","row","Green","Red","sectionTitle","paddingLeft","playerRow","subTitle","textDecorationLine","first_name","last_name","p_id","Pairing","navigation","route","step","params","card","isFocused","dispatch","state","tournaments","auth","golfers","setGolfers","selectedGolferId","setGolfer","hole","holes","payload","t_id","round","group_id","hole_number","holeGolfers","length","nextPairing","user","id","navigate","overflowContainer","container","padding","paddingT100","title","padding20","section","tournament","name","rowTitle","Date","start_date","toDateString","end_date","par","yardage","smallText","map","index","profile","width","goBack","mapStateToProps","loading","error","StyleSheet","create","paddingVertical","paddingH40","paddingHorizontal","topSection","paddingTop","justifyContent","flexDirection","alignItems"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, SafeAreaView, ScrollView, TouchableOpacity } from 'react-native';\nimport { useIsFocused } from '@react-navigation/native';\nimport * as Progress from 'react-native-progress';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { getHoleGolfers, getTournamentById, getGroupingsPar3s, userCTTPPick } from '../store/redux/tournaments/actions';\nimport { BackButton, Button, Menu, Round, SeparateButton } from '../components/Button';\nimport { CheckedIcon, UnCheckedIcon, UnderlineIcon } from '../components/icons';\nimport { CommonColors, CommonStyles } from './style';\nimport { w, h } from '../utils/scale'\n\n\nconst PairingPlayer = ({ percent, golfer, selectedId, onPress, onCheck }) => <View>\n  <View style={styles.row}>\n    <Progress.Bar borderRadius={0} progress={1} color={percent > 0.5 ? CommonColors.Green :\n      CommonColors.Red} width={w(540 * percent)} />\n    <Text style={[CommonStyles.sectionTitle, { paddingLeft: 20 }]}>{percent * 100}%</Text>\n  </View>\n  <View style={styles.playerRow}>\n    <TouchableOpacity onPress={onPress}>\n      <Text style={[CommonStyles.subTitle, { textDecorationLine: 'underline' }]}>{golfer.first_name} {golfer.last_name}</Text>\n    </TouchableOpacity>\n    <TouchableOpacity onPress={onCheck}>\n      {golfer.p_id === selectedId ? <CheckedIcon /> : <UnCheckedIcon />}\n    </TouchableOpacity>\n  </View>\n</View>\n\nconst Pairing = ({ navigation, route }) => {\n  const step = route.params?.step || 1\n  const { card } = route.params\n  const isFocused = useIsFocused()\n\n  const dispatch = useDispatch()\n  const state = useSelector(state => state.tournaments)\n  const auth = useSelector(state => state.auth)\n\n  const [golfers, setGolfers] = useState([])\n  const [selectedGolferId, setGolfer] = useState('')\n  const hole = state.holes[step - 1]\n\n  useEffect(() => {\n    const payload = {\n      t_id: card.t_id,\n      round: card.round,\n      group_id: card.group_id || 1,\n      hole_number: state.holes[step - 1]['hole_number']\n    }\n    dispatch(getHoleGolfers(payload))\n  }, [step])\n\n  useEffect(() => {\n    if (state.holeGolfers && state.holeGolfers.length !== 0) {\n      setGolfers(state.holeGolfers)\n      setGolfer(state.holeGolfers[0].p_id)\n    }\n  }, [state.holeGolfers])\n\n  const nextPairing = () => {\n    const payload = {\n      \"user_id\": auth.user.id,\n      \"t_id\": card.t_id,\n      \"hole\": hole.hole_number,\n      \"round\": card.round,\n      \"group_id\": card.group_id,\n      \"p_id\": selectedGolferId\n    }\n    dispatch(userCTTPPick(payload))\n    navigation.navigate('Pairings', { step: step + 1, card })\n  }\n\n  return (\n    <View style={CommonStyles.overflowContainer}>\n      <BackButton />\n      <SafeAreaView style={CommonStyles.container}>\n        <ScrollView style={CommonStyles.container}>\n          <View style={[CommonStyles.padding, CommonStyles.paddingT100]}>\n            <Text style={CommonStyles.title}>Rabbit Card PAIRINGS</Text>\n            <View style={styles.padding20}>\n              <UnderlineIcon />\n            </View>\n            <View style={styles.section}>\n              <Text style={CommonStyles.sectionTitle}>{card?.tournament?.name || ''}</Text>\n              <Text style={CommonStyles.rowTitle}>{new Date(card.tournament.start_date).toDateString() || \"\"} - {new Date(card?.tournament.end_date).toDateString() || \"\"}</Text>\n            </View>\n            <View style={styles.container}>\n              <Round step={card.round} />\n              <Text style={CommonStyles.subTitle}>HOLE {hole.hole_number}: PAR {hole.par}, {hole.yardage} YARDS PAIRING {step}</Text>\n              <Text style={CommonStyles.smallText}>Select one player to be closest to the pin. See our expert recommentaions.</Text>\n            </View>\n          </View>\n          {golfers.map((golfer, index) =>\n            <PairingPlayer\n              key={index}\n              golfer={golfer}\n              percent={0.25 * (index + 1)}\n              selectedId={selectedGolferId}\n              onPress={() => navigation.navigate('PlayerProfile', { profile: golfer })}\n              onCheck={() => setGolfer(golfer.p_id)}\n            />\n          )}\n        </ScrollView>\n      </SafeAreaView>\n      {step !== 4 ? <Button title=\"NEXT PAIRING\" onPress={() => nextPairing()} backgroundColor={CommonColors.Green} style={{ width: '100%' }} /> :\n        <SeparateButton prevTitle=\"TOURNAMENTS\" nextTitle=\"RABBIT CARD\" prev={() => navigation.goBack()} next={() => navigation.navigate('ReadyToPlaySummary', { card })} backgroundColor={CommonColors.Green} />}\n    </View>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  loading: state.tournaments.loading,\n  error: state.tournaments.error,\n});\n\nexport default connect(mapStateToProps, { getHoleGolfers, userCTTPPick })(Pairing);\n\nconst styles = StyleSheet.create({\n  padding20: {\n    paddingVertical: w(20),\n  },\n  paddingH40: {\n    paddingHorizontal: w(40),\n    paddingVertical: w(10)\n  },\n  topSection: {\n    paddingTop: w(20)\n  },\n  section: {\n    paddingVertical: w(40),\n  },\n  container: {\n    justifyContent: 'center',\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  playerRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingHorizontal: w(40),\n    paddingVertical: w(20)\n  }\n});"]},"metadata":{},"sourceType":"module"}