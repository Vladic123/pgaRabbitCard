{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/thinktanker/Downloads/pgaRabbitCard-master/rabbitfront1/Modules/TournamentCountDown.js\";\n\nimport React, { Component, useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { CountdownCircleTimer } from 'react-native-countdown-circle-timer';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { getTournamentById, setTournament as setTournamentReducer } from \"../store/redux/tournaments/actions\";\nimport { BackButton, Button, ButtonBack, Menu } from \"../components/Button\";\nimport { UnderlineIcon } from \"../components/icons\";\nimport { CommonColors, CommonStyles } from \"./style\";\nimport { w, h } from \"../utils/scale\";\n\nvar getTimeRemaining = function getTimeRemaining(end) {\n  var total = Date.parse(end) - Date.parse(new Date());\n  var seconds = Math.floor(total / 1000 % 60).toLocaleString('en-US', {\n    minimumIntegerDigits: 2,\n    useGrouping: false\n  });\n  var minutes = Math.floor(total / 1000 / 60 % 60).toLocaleString('en-US', {\n    minimumIntegerDigits: 2,\n    useGrouping: false\n  });\n  var hours = Math.floor(total / (1000 * 60 * 60) % 24).toLocaleString('en-US', {\n    minimumIntegerDigits: 2,\n    useGrouping: false\n  });\n  var days = Math.floor(total / (1000 * 60 * 60 * 24)).toLocaleString('en-US', {\n    minimumIntegerDigits: 2,\n    useGrouping: false\n  });\n  return {\n    total: total,\n    days: days,\n    hours: hours,\n    minutes: minutes,\n    seconds: seconds\n  };\n};\n\nvar getStartDate = function getStartDate(startDate, round) {\n  var dt = new Date(startDate);\n  dt.setDate(dt.getDate() + round - 1);\n  return dt;\n};\n\nvar TournamentCountDown = function TournamentCountDown(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var dispatch = useDispatch();\n  var card = route.params.card;\n\n  var _useState = useState(100),\n      _useState2 = _slicedToArray(_useState, 2),\n      duration = _useState2[0],\n      setDuration = _useState2[1];\n\n  var endDate = card.tournament.end_date;\n  var startDate = getStartDate(card.tournament.start_date, card.round);\n  useEffect(function () {\n    var duration = Math.floor((new Date(startDate).getTime() - Date.now()) / 1000);\n  }, [startDate]);\n  if (!card) return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  });\n  return React.createElement(View, {\n    style: CommonStyles.overflowContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(BackButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), React.createElement(SafeAreaView, {\n    style: CommonStyles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    style: CommonStyles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: [CommonStyles.padding, CommonStyles.paddingT100],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: CommonStyles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Rabbit Card Pick Countdown\"), React.createElement(View, {\n    style: styles.padding20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, React.createElement(UnderlineIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: styles.section,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: CommonStyles.sectionTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, card.tournament.name), React.createElement(Text, {\n    style: CommonStyles.rowTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, new Date(card.tournament.start_date).toDateString(), \" - \", new Date(card.tournament.end_date).toDateString()), React.createElement(Text, {\n    style: [CommonStyles.sectionTitle, {\n      paddingVertical: w(20)\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"Make final Rabbit Card Picks before time runs out.\"), React.createElement(Text, {\n    style: [CommonStyles.sectionTitle, {\n      paddingVertical: w(20)\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, \"Push notification will be sent to phone when parings are released by the PGA\")), React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, React.createElement(CountdownCircleTimer, {\n    key: \"\" + new Date().getTime(),\n    isPlaying: true,\n    duration: duration,\n    colors: [[CommonColors.Warning, 0.2], [CommonColors.Green, 0.8]],\n    onComplete: function onComplete() {\n      return [true];\n    },\n    size: w(400),\n    isLinearGradient: true,\n    initialRemainingTime: duration,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, function (_ref2) {\n    var remainingTime = _ref2.remainingTime,\n        animatedColor = _ref2.animatedColor;\n    return React.createElement(View, {\n      style: styles.timeContent,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }, React.createElement(Animated.Text, {\n      style: styles.timerText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, getTimeRemaining(startDate).hours + \":\" + getTimeRemaining(startDate).minutes + \":\" + getTimeRemaining(startDate).seconds), React.createElement(Animated.Text, {\n      style: [CommonStyles.sectionTitle, {\n        textAlign: 'center'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, startDate.toDateString()), React.createElement(Animated.Text, {\n      style: [CommonStyles.smallText, {\n        textAlign: 'center'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, \"All picks must be final one minute before tournament\\u2019s first tee time.\"));\n  }))))), React.createElement(ButtonBack, {\n    title: \"BACK TO RABBIT CARDS\",\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    backgroundColor: CommonColors.Green,\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.tournaments.loading,\n    error: state.tournaments.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getTournamentById: getTournamentById\n})(TournamentCountDown);\nvar styles = StyleSheet.create({\n  padding20: {\n    paddingVertical: w(20)\n  },\n  paddingH40: {\n    paddingHorizontal: w(40),\n    paddingVertical: w(10)\n  },\n  topSection: {\n    paddingTop: w(20)\n  },\n  section: {\n    paddingVertical: w(40)\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: w(20),\n    padding: 8\n  },\n  timeContent: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: w(40)\n  },\n  timerText: {\n    color: CommonColors.Warning,\n    fontFamily: 'SourceSansRomanBold',\n    fontSize: w(60),\n    paddingVertical: w(20)\n  }\n});","map":{"version":3,"sources":["/Users/thinktanker/Downloads/pgaRabbitCard-master/rabbitfront1/Modules/TournamentCountDown.js"],"names":["React","Component","useEffect","useState","CountdownCircleTimer","connect","useDispatch","useSelector","getTournamentById","setTournament","setTournamentReducer","BackButton","Button","ButtonBack","Menu","UnderlineIcon","CommonColors","CommonStyles","w","h","getTimeRemaining","end","total","Date","parse","seconds","Math","floor","toLocaleString","minimumIntegerDigits","useGrouping","minutes","hours","days","getStartDate","startDate","round","dt","setDate","getDate","TournamentCountDown","navigation","route","dispatch","card","params","duration","setDuration","endDate","tournament","end_date","start_date","getTime","now","overflowContainer","container","padding","paddingT100","title","styles","padding20","section","sectionTitle","name","rowTitle","toDateString","paddingVertical","Warning","Green","remainingTime","animatedColor","timeContent","timerText","textAlign","smallText","goBack","width","mapStateToProps","state","loading","tournaments","error","StyleSheet","create","paddingH40","paddingHorizontal","topSection","paddingTop","flex","justifyContent","alignItems","color","fontFamily","fontSize"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, SafeAreaView, ScrollView, Animated } from 'react-native';\nimport { CountdownCircleTimer } from 'react-native-countdown-circle-timer';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { getTournamentById, setTournament as setTournamentReducer } from '../store/redux/tournaments/actions';\nimport { BackButton, Button, ButtonBack, Menu } from '../components/Button';\nimport { UnderlineIcon } from '../components/icons';\nimport { CommonColors, CommonStyles } from './style';\nimport { w, h } from '../utils/scale'\n\nconst getTimeRemaining = (end) => {\n  const total = Date.parse(end) - Date.parse(new Date());\n  const seconds = Math.floor((total / 1000) % 60).toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false });\n  const minutes = Math.floor((total / 1000 / 60) % 60).toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false });\n  const hours = Math.floor((total / (1000 * 60 * 60)) % 24).toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false });\n  const days = Math.floor(total / (1000 * 60 * 60 * 24)).toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false });\n\n  return {\n    total,\n    days,\n    hours,\n    minutes,\n    seconds\n  };\n}\n\nconst getStartDate = (startDate, round) => {\n  let dt = new Date(startDate);\n  dt.setDate(dt.getDate() + round - 1);\n  return dt\n}\nconst TournamentCountDown = ({ navigation, route }) => {\n  const dispatch = useDispatch();\n  const { card } = route.params\n  const [duration, setDuration] = useState(100)\n\n\n  const endDate = card.tournament.end_date\n  const startDate = getStartDate(card.tournament.start_date, card.round)\n\n  useEffect(() => {\n    const duration = Math.floor((new Date(startDate).getTime() - Date.now()) / 1000)\n    // setDuration(duration)\n    // setDuration(100)\n  }, [startDate])\n\n  if (!card) return <View />\n\n  return (\n    <View style={CommonStyles.overflowContainer}>\n      <BackButton />\n      <SafeAreaView style={CommonStyles.container}>\n        <ScrollView style={CommonStyles.container}>\n          <View style={[CommonStyles.padding, CommonStyles.paddingT100]}>\n            <Text style={CommonStyles.title}>Rabbit Card Pick Countdown</Text>\n            <View style={styles.padding20}>\n              <UnderlineIcon />\n            </View>\n            <View style={styles.section}>\n              <Text style={CommonStyles.sectionTitle}>{card.tournament.name}</Text>\n              <Text style={CommonStyles.rowTitle}>{new Date(card.tournament.start_date).toDateString()} - {new Date(card.tournament.end_date).toDateString()}</Text>\n              <Text style={[CommonStyles.sectionTitle, { paddingVertical: w(20) }]}>Make final Rabbit Card Picks before time runs out.</Text>\n              <Text style={[CommonStyles.sectionTitle, { paddingVertical: w(20) }]}>Push notification will be sent to phone when parings are released by the PGA</Text>\n            </View>\n            <View style={styles.container}>\n              <CountdownCircleTimer\n                key={`${new Date().getTime()}`}\n                isPlaying={true}\n                duration={duration}\n                colors={[\n                  [CommonColors.Warning, 0.2],\n                  [CommonColors.Green, 0.8],\n                ]}\n                onComplete={() => [true]}\n                size={w(400)}\n                isLinearGradient\n                initialRemainingTime={duration}\n              >\n                {({ remainingTime, animatedColor }) => (\n                  <View style={styles.timeContent}>\n                    <Animated.Text style={styles.timerText}>\n                      {`${getTimeRemaining(startDate).hours}:${getTimeRemaining(startDate).minutes}:${getTimeRemaining(startDate).seconds}`}\n                    </Animated.Text>\n                    <Animated.Text style={[CommonStyles.sectionTitle, { textAlign: 'center', }]}>\n                      {startDate.toDateString()}\n                    </Animated.Text>\n                    <Animated.Text style={[CommonStyles.smallText, { textAlign: 'center' }]}>\n                      All picks must be final one minute\n                      before tournament’s first tee time.\n                    </Animated.Text>\n                  </View>\n                )}\n              </CountdownCircleTimer>\n            </View>\n          </View>\n        </ScrollView>\n      </SafeAreaView>\n      <ButtonBack title=\"BACK TO RABBIT CARDS\"\n        onPress={() => navigation.goBack()}\n        backgroundColor={CommonColors.Green} style={{ width: '100%' }}\n      />\n    </View>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  loading: state.tournaments.loading,\n  error: state.tournaments.error,\n});\n\nexport default connect(mapStateToProps, { getTournamentById, })(TournamentCountDown);\n\nconst styles = StyleSheet.create({\n  padding20: {\n    paddingVertical: w(20),\n  },\n  paddingH40: {\n    paddingHorizontal: w(40),\n    paddingVertical: w(10)\n  },\n  topSection: {\n    paddingTop: w(20)\n  },\n  section: {\n    paddingVertical: w(40),\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: w(20),\n    padding: 8,\n  },\n  timeContent: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: w(40)\n  },\n  timerText: {\n    color: CommonColors.Warning,\n    fontFamily: 'SourceSansRomanBold',\n    fontSize: w(60),\n    paddingVertical: w(20)\n  },\n});"]},"metadata":{},"sourceType":"module"}