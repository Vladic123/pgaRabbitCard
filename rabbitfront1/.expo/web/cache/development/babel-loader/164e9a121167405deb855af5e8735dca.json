{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/thinktanker/Downloads/pgaRabbitCard-master/rabbitfront1/Modules/TournamentChoices.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useIsFocused } from '@react-navigation/native';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { getTournamentById, setRound, setTournament, createRabbitCard } from \"../store/redux/tournaments/actions\";\nimport { CancelIcon, SelectIcon, UnderlineIcon } from \"../components/icons\";\nimport { BackButton, LoadingContainer, Menu } from \"../components/Button\";\nimport { CommonColors, CommonStyles } from \"./style\";\nimport { w, h } from \"../utils/scale\";\nexport var product = {\n  id: 1,\n  name: \"TSi2 Driver\",\n  price: 549,\n  company: \"Titleist\",\n  logo: require(\"../assets/sponsors/titleist.png\"),\n  images: [{\n    id: 1,\n    image: require(\"../assets/titleist/1.png\")\n  }, {\n    id: 2,\n    image: require(\"../assets/titleist/2.png\")\n  }, {\n    id: 3,\n    image: require(\"../assets/titleist/3.png\")\n  }, {\n    id: 4,\n    image: require(\"../assets/titleist/4.png\")\n  }, {\n    id: 5,\n    image: require(\"../assets/titleist/5.png\")\n  }, {\n    id: 6,\n    image: require(\"../assets/titleist/6.png\")\n  }]\n};\n\nvar nextDay = function nextDay(date, next) {\n  var day = new Date(date);\n  var nextDay = new Date(day);\n  nextDay.setDate(day.getDate() + next);\n  return nextDay;\n};\n\nvar TournamentChoices = function TournamentChoices(_ref) {\n  var _selectedTournament$c, _selectedTournament$c2;\n\n  var navigation = _ref.navigation;\n  var isFocused = useIsFocused();\n  var dispatch = useDispatch();\n  var tournaments = useSelector(function (state) {\n    return state.tournaments;\n  });\n  var rangeTournaments = tournaments.rangeTournaments,\n      selectedTournament = tournaments.selectedTournament,\n      currentRound = tournaments.currentRound;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  useEffect(function () {\n    if (selectedTournament) {\n      setLoading(true);\n      setTimeout(function () {\n        dispatch(setTournament(selectedTournament));\n        dispatch(getTournamentById(selectedTournament.t_id));\n        setLoading(false);\n      }, 500);\n    } else {\n      navigation.navigate('NoChoice');\n    }\n  }, [currentRound]);\n\n  var onSubmit = function onSubmit() {\n    var payload = {\n      t_id: selectedTournament.t_id,\n      round: currentRound\n    };\n    dispatch(createRabbitCard(payload));\n    updateTournament();\n  };\n\n  var onCancel = function onCancel() {\n    updateTournament();\n  };\n\n  var updateTournament = function updateTournament() {\n    var rangeIds, index, nextItem;\n    return _regeneratorRuntime.async(function updateTournament$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (currentRound === selectedTournament.rounds_official_money) {\n              rangeIds = rangeTournaments.map(function (item) {\n                return item.t_id;\n              });\n              index = rangeIds.indexOf(selectedTournament.t_id);\n\n              if (index >= 0 && index < rangeTournaments.length - 1) {\n                nextItem = rangeTournaments[index + 1];\n                dispatch(setTournament(nextItem));\n                dispatch(setRound(1));\n              } else {\n                navigation.navigate('NoChoice');\n              }\n            } else {\n              dispatch(setRound(currentRound + 1));\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (!selectedTournament) return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 35\n    }\n  });\n  return React.createElement(View, {\n    style: CommonStyles.overflowContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, React.createElement(BackButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), loading || tournaments.loading && React.createElement(LoadingContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 42\n    }\n  }), React.createElement(SafeAreaView, {\n    style: CommonStyles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    style: CommonStyles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: [CommonStyles.padding, {\n      paddingTop: w(100)\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: CommonStyles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"Tournament choices\"), React.createElement(View, {\n    style: styles.padding20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, React.createElement(UnderlineIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: styles.section,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: CommonStyles.sectionTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, selectedTournament.name || \"\"), React.createElement(View, {\n    style: styles.padding20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, React.createElement(UnderlineIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  })), React.createElement(Text, {\n    style: CommonStyles.rowTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, new Date(selectedTournament.start_date).toDateString() || \"\", \" - \", new Date(selectedTournament == null ? void 0 : selectedTournament.end_date).toDateString() || \"\")), React.createElement(View, {\n    style: styles.section,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: CommonStyles.sectionTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, \"Location\"), React.createElement(View, {\n    style: styles.padding20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, React.createElement(UnderlineIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  })), (selectedTournament == null ? void 0 : selectedTournament.courses) && React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 47\n    }\n  }, React.createElement(Text, {\n    style: CommonStyles.rowTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, (selectedTournament == null ? void 0 : (_selectedTournament$c = selectedTournament.courses[0]) == null ? void 0 : _selectedTournament$c.location) || ''), React.createElement(Text, {\n    style: CommonStyles.rowTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, (selectedTournament == null ? void 0 : (_selectedTournament$c2 = selectedTournament.courses[0]) == null ? void 0 : _selectedTournament$c2.name) || ''))), React.createElement(View, {\n    style: styles.section,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: CommonStyles.sectionTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, \"Round Details\"), React.createElement(View, {\n    style: styles.padding20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, React.createElement(UnderlineIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  })), currentRound && React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 32\n    }\n  }, React.createElement(Text, {\n    style: CommonStyles.rowTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, \"Round \", currentRound), React.createElement(Text, {\n    style: [CommonStyles.rowTitle, {\n      paddingBottom: w(20)\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, new Date(nextDay(selectedTournament.start_date, currentRound - 1)).toDateString())))))), React.createElement(View, {\n    style: styles.bottom,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.left,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.leftTop,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: CommonStyles.sectionTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, \"RABBIT PURSE\"), React.createElement(Text, {\n    style: [CommonStyles.smallText, {\n      paddingLeft: 4\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, \"Top Five Winners\")), React.createElement(View, {\n    style: styles.leftBottom,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    source: require(\"./../assets/brand.png\"),\n    style: styles.brand,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: [CommonStyles.sectionTitle, {\n      color: CommonColors.LightGrey\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, \"DRIVER | TSi2 DRIVER\"))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"SponsorGalary\", {\n        product: product\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: product.images[0].image,\n    style: styles.image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: styles.bottomButtonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return onCancel();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, React.createElement(CancelIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return onSubmit();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, React.createElement(SelectIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.tournaments.loading,\n    error: state.tournaments.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getTournamentById: getTournamentById,\n  createRabbitCard: createRabbitCard\n})(TournamentChoices);\nvar styles = StyleSheet.create({\n  padding20: {\n    paddingVertical: w(20)\n  },\n  section: {\n    paddingVertical: w(40)\n  },\n  bottom: {\n    backgroundColor: CommonColors.White,\n    paddingLeft: w(40),\n    paddingVertical: w(20),\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  image: {\n    width: w(200),\n    height: w(100),\n    resizeMode: 'contain'\n  },\n  brand: {\n    width: w(160),\n    resizeMode: 'contain'\n  },\n  leftTop: {\n    flexDirection: 'row',\n    alignItems: 'flex-end'\n  },\n  leftBottom: {\n    flexDirection: 'row',\n    paddingVertical: 4\n  },\n  bottomButtonContainer: {\n    paddingVertical: w(20),\n    backgroundColor: CommonColors.Green,\n    flexDirection: 'row',\n    justifyContent: 'space-evenly'\n  }\n});","map":{"version":3,"sources":["/Users/thinktanker/Downloads/pgaRabbitCard-master/rabbitfront1/Modules/TournamentChoices.js"],"names":["React","useEffect","useState","useIsFocused","connect","useDispatch","useSelector","getTournamentById","setRound","setTournament","createRabbitCard","CancelIcon","SelectIcon","UnderlineIcon","BackButton","LoadingContainer","Menu","CommonColors","CommonStyles","w","h","product","id","name","price","company","logo","require","images","image","nextDay","date","next","day","Date","setDate","getDate","TournamentChoices","navigation","isFocused","dispatch","tournaments","state","rangeTournaments","selectedTournament","currentRound","loading","setLoading","setTimeout","t_id","navigate","onSubmit","payload","round","updateTournament","onCancel","rounds_official_money","rangeIds","map","item","index","indexOf","length","nextItem","overflowContainer","container","padding","paddingTop","title","styles","padding20","section","sectionTitle","rowTitle","start_date","toDateString","end_date","courses","location","paddingBottom","bottom","left","leftTop","smallText","paddingLeft","leftBottom","brand","color","LightGrey","bottomButtonContainer","mapStateToProps","error","StyleSheet","create","paddingVertical","backgroundColor","White","flexDirection","alignItems","justifyContent","width","height","resizeMode","Green"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, Image, ScrollView, SafeAreaView, TouchableOpacity, Alert } from 'react-native';\nimport { useIsFocused } from '@react-navigation/native';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { getTournamentById, setRound, setTournament, createRabbitCard } from '../store/redux/tournaments/actions';\nimport { CancelIcon, SelectIcon, UnderlineIcon } from '../components/icons';\nimport { BackButton, LoadingContainer, Menu } from '../components/Button';\nimport { CommonColors, CommonStyles } from './style';\nimport { w, h } from '../utils/scale';\n\nexport const product = {\n  id: 1,\n  name: \"TSi2 Driver\",\n  price: 549,\n  company: \"Titleist\",\n  logo: require(\"../assets/sponsors/titleist.png\"),\n  images: [{\n    id: 1,\n    image: require('../assets/titleist/1.png')\n  }, {\n    id: 2,\n    image: require('../assets/titleist/2.png')\n  }, {\n    id: 3,\n    image: require('../assets/titleist/3.png')\n  }, {\n    id: 4,\n    image: require('../assets/titleist/4.png')\n  }, {\n    id: 5,\n    image: require('../assets/titleist/5.png')\n  }, {\n    id: 6,\n    image: require('../assets/titleist/6.png')\n  },]\n}\n\nconst nextDay = (date, next) => {\n  const day = new Date(date);\n\n  let nextDay = new Date(day);\n  nextDay.setDate(day.getDate() + next);\n  return nextDay\n}\n\nconst TournamentChoices = ({ navigation }) => {\n  const isFocused = useIsFocused()\n  const dispatch = useDispatch();\n  const tournaments = useSelector((state) => state.tournaments);\n  const { rangeTournaments, selectedTournament, currentRound } = tournaments;\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    if (selectedTournament) {\n      setLoading(true)\n\n      setTimeout(() => {\n        dispatch(setTournament(selectedTournament))\n        dispatch(getTournamentById(selectedTournament.t_id))\n        setLoading(false)\n      }, 500);\n\n    } else {\n      navigation.navigate('NoChoice')\n    }\n  }, [currentRound])\n\n  const onSubmit = () => {\n    const payload = { t_id: selectedTournament.t_id, round: currentRound }\n    dispatch(createRabbitCard(payload))\n    updateTournament()\n  }\n\n  const onCancel = () => {\n    updateTournament()\n  }\n\n  const updateTournament = async () => {\n    if (currentRound === selectedTournament.rounds_official_money) {\n      const rangeIds = rangeTournaments.map(item => item.t_id)\n      const index = rangeIds.indexOf(selectedTournament.t_id);\n      if (index >= 0 && index < rangeTournaments.length - 1) {\n        const nextItem = rangeTournaments[index + 1]\n        dispatch(setTournament(nextItem))\n        dispatch(setRound(1))\n      } else {\n        navigation.navigate('NoChoice')\n      }\n    } else {\n      dispatch(setRound(currentRound + 1))\n    }\n  }\n\n  if (!selectedTournament) return <View />\n\n  return (\n    <View style={CommonStyles.overflowContainer}>\n      <BackButton />\n      {loading || tournaments.loading && <LoadingContainer />}\n      <SafeAreaView style={CommonStyles.container}>\n        <ScrollView style={CommonStyles.container}>\n          <View style={[CommonStyles.padding, { paddingTop: w(100) }]}>\n            <Text style={CommonStyles.title}>Tournament choices</Text>\n            <View style={styles.padding20}>\n              <UnderlineIcon />\n            </View>\n            <View style={styles.section}>\n              <Text style={CommonStyles.sectionTitle}>{selectedTournament.name || \"\"}</Text>\n              <View style={styles.padding20}>\n                <UnderlineIcon />\n              </View>\n              <Text style={CommonStyles.rowTitle}>{new Date(selectedTournament.start_date).toDateString() || \"\"} - {new Date(selectedTournament?.end_date).toDateString() || \"\"}</Text>\n            </View>\n            <View style={styles.section}>\n              <Text style={CommonStyles.sectionTitle}>Location</Text>\n              <View style={styles.padding20}>\n                <UnderlineIcon />\n              </View>\n              {selectedTournament?.courses && <View>\n                <Text style={CommonStyles.rowTitle}>{selectedTournament?.courses[0]?.location || ''}</Text>\n                <Text style={CommonStyles.rowTitle}>{selectedTournament?.courses[0]?.name || ''}</Text>\n              </View>}\n            </View>\n\n            <View style={styles.section}>\n              <Text style={CommonStyles.sectionTitle}>Round Details</Text>\n              <View style={styles.padding20}>\n                <UnderlineIcon />\n              </View>\n              {currentRound && <View>\n                <Text style={CommonStyles.rowTitle}>Round {currentRound}</Text>\n                <Text style={[CommonStyles.rowTitle, { paddingBottom: w(20) }]}>{new Date(nextDay(selectedTournament.start_date, currentRound - 1)).toDateString()}</Text>\n              </View>}\n            </View>\n          </View>\n        </ScrollView>\n      </SafeAreaView>\n      <View style={styles.bottom}>\n        <View style={styles.left}>\n          <View style={styles.leftTop}>\n            <Text style={CommonStyles.sectionTitle}>RABBIT PURSE</Text>\n            <Text style={[CommonStyles.smallText, { paddingLeft: 4 }]}>Top Five Winners</Text>\n          </View>\n          <View style={styles.leftBottom}>\n            <Image source={require('./../assets/brand.png')} style={styles.brand} />\n            <Text style={[CommonStyles.sectionTitle, { color: CommonColors.LightGrey }]}>DRIVER | TSi2 DRIVER</Text>\n          </View>\n        </View>\n        <TouchableOpacity onPress={() => navigation.navigate(\"SponsorGalary\", { product })} >\n          <Image source={product.images[0].image} style={styles.image} />\n        </TouchableOpacity>\n      </View>\n      <View style={styles.bottomButtonContainer}>\n        <TouchableOpacity onPress={() => onCancel()}>\n          <CancelIcon />\n        </TouchableOpacity>\n        <TouchableOpacity onPress={() => onSubmit()}>\n          <SelectIcon />\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  loading: state.tournaments.loading,\n  error: state.tournaments.error,\n});\n\nexport default connect(mapStateToProps, { getTournamentById, createRabbitCard })(TournamentChoices);\n\nconst styles = StyleSheet.create({\n  padding20: {\n    paddingVertical: w(20),\n  },\n  section: {\n    paddingVertical: w(40),\n  },\n  bottom: {\n    backgroundColor: CommonColors.White,\n    paddingLeft: w(40),\n    paddingVertical: w(20),\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  image: {\n    width: w(200),\n    height: w(100),\n    resizeMode: 'contain',\n  },\n  brand: {\n    width: w(160),\n    resizeMode: 'contain',\n  },\n  leftTop: {\n    flexDirection: 'row',\n    alignItems: 'flex-end'\n  },\n  leftBottom: {\n    flexDirection: 'row',\n    paddingVertical: 4,\n  },\n  bottomButtonContainer: {\n    paddingVertical: w(20),\n    backgroundColor: CommonColors.Green,\n    flexDirection: 'row',\n    justifyContent: 'space-evenly'\n  }\n});"]},"metadata":{},"sourceType":"module"}