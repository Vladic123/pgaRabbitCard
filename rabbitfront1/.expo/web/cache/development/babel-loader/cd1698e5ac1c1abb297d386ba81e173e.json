{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/thinktanker/Downloads/pgaRabbitCard-master/rabbitfront1/Modules/NoChoice.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { useNavigation } from '@react-navigation/native';\nimport LottieView from 'lottie-react-native';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { verifyCode, clearSignUpError } from \"../store/redux/auth/actions\";\nimport { CommonColors, CommonStyles } from \"./style\";\nimport { BackButton, Button, ButtonBack, LoadingContainer } from \"../components/Button\";\nimport { w, h } from \"../utils/scale\";\n\nvar NoChoice = function NoChoice(_ref) {\n  var route = _ref.route;\n  var animation = React.createRef();\n  var navigation = useNavigation();\n  var dispatch = useDispatch();\n  useEffect(function () {\n    animation.current.play();\n  }, []);\n  useEffect(function () {\n    dispatch(clearSignUpError());\n  }, []);\n  return React.createElement(View, {\n    style: CommonStyles.overflowContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(BackButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), React.createElement(SafeAreaView, {\n    style: CommonStyles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    style: CommonStyles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: [CommonStyles.padding, CommonStyles.paddingT100],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.padding20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.textContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, React.createElement(LottieView, {\n    ref: animation,\n    autoPlay: true,\n    loop: true,\n    style: {\n      width: w(500),\n      height: h(500)\n    },\n    source: require(\"../assets/lottie/nochoice.json\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  })), React.createElement(Text, {\n    style: [CommonStyles.subTitle, {\n      textAlign: 'center',\n      paddingVertical: w(40)\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, \"You've chosen all desired tournaments and rounds for the selected date range.\"))))), React.createElement(ButtonBack, {\n    title: \"BACK TO RABBIT CARDS\",\n    onPress: function onPress() {\n      return navigation.navigate(\"MyRabbitCards\");\n    },\n    backgroundColor: CommonColors.Green,\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error\n  };\n};\n\nexport default connect(mapStateToProps, {})(NoChoice);\nvar styles = StyleSheet.create({\n  padding20: {\n    paddingVertical: w(20)\n  },\n  section: {\n    paddingTop: w(100),\n    paddingHorizontal: w(60)\n  },\n  textContainer: {\n    alignItems: 'center'\n  },\n  row: {\n    paddingTop: w(40),\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  root: {\n    padding: w(20),\n    minHeight: w(300)\n  },\n  title: {\n    textAlign: 'center',\n    fontSize: w(30)\n  },\n  codeFiledRoot: {\n    marginTop: w(40),\n    width: w(300),\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n  cellRoot: {\n    width: w(30),\n    height: w(60),\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderBottomColor: CommonColors.Green,\n    borderBottomWidth: 1\n  },\n  cellText: {\n    color: CommonColors.Green,\n    fontSize: w(48),\n    fontFamily: 'SourceSansRomanBold',\n    textAlign: 'center'\n  },\n  focusCell: {\n    borderBottomColor: '#007AFF',\n    borderBottomWidth: 2\n  }\n});","map":{"version":3,"sources":["/Users/thinktanker/Downloads/pgaRabbitCard-master/rabbitfront1/Modules/NoChoice.js"],"names":["React","useEffect","useState","useNavigation","LottieView","connect","useDispatch","useSelector","verifyCode","clearSignUpError","CommonColors","CommonStyles","BackButton","Button","ButtonBack","LoadingContainer","w","h","NoChoice","route","animation","createRef","navigation","dispatch","current","play","overflowContainer","container","padding","paddingT100","styles","padding20","textContainer","width","height","require","subTitle","textAlign","paddingVertical","navigate","Green","mapStateToProps","state","loading","auth","error","StyleSheet","create","section","paddingTop","paddingHorizontal","alignItems","row","flexDirection","root","minHeight","title","fontSize","codeFiledRoot","marginTop","marginLeft","marginRight","cellRoot","justifyContent","borderBottomColor","borderBottomWidth","cellText","color","fontFamily","focusCell"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, ScrollView, SafeAreaView } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport LottieView from 'lottie-react-native';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { verifyCode, clearSignUpError } from '../store/redux/auth/actions';\nimport { CommonColors, CommonStyles } from './style';\nimport { BackButton, Button, ButtonBack, LoadingContainer } from '../components/Button';\nimport { w, h } from '../utils/scale';\n\nconst NoChoice = ({ route }) => {\n  let animation = React.createRef();\n\n  const navigation = useNavigation()\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    animation.current.play()\n  }, [])\n\n  useEffect(() => {\n    dispatch(clearSignUpError())\n  }, [])\n\n  return (\n    <View style={CommonStyles.overflowContainer}>\n      <BackButton />\n      <SafeAreaView style={CommonStyles.container}>\n        <ScrollView style={CommonStyles.container}>\n          <View style={[CommonStyles.padding, CommonStyles.paddingT100]}>\n            <View style={styles.padding20}>\n              <View style={styles.textContainer}>\n                <LottieView\n                  ref={animation}\n                  autoPlay\n                  loop={true}\n                  style={{\n                    width: w(500),\n                    height: h(500)\n                  }}\n                  source={require('../assets/lottie/nochoice.json')}\n                />\n              </View>\n              <Text style={[CommonStyles.subTitle, { textAlign: 'center', paddingVertical: w(40) }]}>You've chosen all desired tournaments and rounds for the selected date range.</Text>\n            </View>\n          </View>\n        </ScrollView>\n      </SafeAreaView>\n      <ButtonBack title=\"BACK TO RABBIT CARDS\" onPress={() => navigation.navigate(\"MyRabbitCards\")} backgroundColor={CommonColors.Green} style={{ width: '100%' }} />\n    </View>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  loading: state.auth.loading,\n  error: state.auth.error,\n});\n\nexport default connect(mapStateToProps, {})(NoChoice);\n\nconst styles = StyleSheet.create({\n  padding20: {\n    paddingVertical: w(20)\n  },\n  section: {\n    paddingTop: w(100),\n    paddingHorizontal: w(60),\n  },\n  textContainer: {\n    alignItems: 'center'\n  },\n  row: {\n    paddingTop: w(40),\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  root: {\n    padding: w(20),\n    minHeight: w(300)\n  },\n  title: {\n    textAlign: 'center',\n    fontSize: w(30)\n  },\n  codeFiledRoot: {\n    marginTop: w(40),\n    width: w(300),\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  cellRoot: {\n    width: w(30),\n    height: w(60),\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderBottomColor: CommonColors.Green,\n    borderBottomWidth: 1,\n  },\n  cellText: {\n    color: CommonColors.Green,\n    fontSize: w(48),\n    fontFamily: 'SourceSansRomanBold',\n    textAlign: 'center',\n  },\n  focusCell: {\n    borderBottomColor: '#007AFF',\n    borderBottomWidth: 2,\n  },\n});"]},"metadata":{},"sourceType":"module"}