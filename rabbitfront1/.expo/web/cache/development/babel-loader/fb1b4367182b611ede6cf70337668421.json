{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/thinktanker/Downloads/pgaRabbitCard-master/rabbitfront1/App.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { LogBox } from \"react-native-web/dist/index\";\nimport { Provider, useSelector, useDispatch } from 'react-redux';\nimport * as Font from 'expo-font';\nimport { store } from \"./store\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { getLoggedUser } from \"./store/redux/auth/actions\";\nimport StartScreen from \"./Modules/Start\";\nimport SignIn from \"./Modules/SignIn\";\nimport CreateAccount from \"./Modules/CreateAccount\";\nimport ForgotPassword from \"./Modules/ForgotPassword\";\nimport SentEmail from \"./Modules/SentEmail\";\nimport ReEnterEmail from \"./Modules/ReEnterEmail\";\nimport ResetPassword from \"./Modules/ResetPassword\";\nimport ResetTemporaryPassword from \"./Modules/ResetTemporaryPassword\";\nimport Sidebar from \"./Modules/Sidebar\";\nimport MyRabbitCards from \"./Modules/MyRabbitCards\";\nimport CreateRabbitCards from \"./Modules/CreateRabbitCards\";\nimport ChooseDates from \"./Modules/ChooseDates\";\nimport TournamentChoices from \"./Modules/TournamentChoices\";\nimport NoChoice from \"./Modules/NoChoice\";\nimport TournamentCountDown from \"./Modules/TournamentCountDown\";\nimport Paring from \"./Modules/Paring\";\nimport RabbitCardSummaryPlayed from \"./Modules/RabbitCardSummary\";\nimport RabbitCardSummaryInProgress from \"./Modules/RabbitCardSummaryInProgress\";\nimport TournamentPushNotification from \"./Modules/TournamentPushNotification\";\nimport RabbitCardReadyToPlay from \"./Modules/RabbitCardReadyToPlay\";\nimport RabbitCardReadyToPlaySummary from \"./Modules/RabbitCardReadyToPlaySummary\";\nimport CompeteTournamentSelection from \"./Modules/CompeteTournamentSelection\";\nimport TieBreaker from \"./Modules/TieBreaker\";\nimport TournamentCalc from \"./Modules/TournamentCalc\";\nimport PurseSponsors from \"./Modules/PurseSponsors\";\nimport Sponsor from \"./Modules/Sponsor\";\nimport SponsorGalary from \"./Modules/SponsorGalary\";\nimport MyRabbitPurse from \"./Modules/MyRabbitPurse\";\nimport MyRabbitPurseShipping from \"./Modules/MyRabbitPurseShipping\";\nimport Thankyou from \"./Modules/Thankyou\";\nimport MyTournamentRanking from \"./Modules/MyTournamentRanking\";\nimport PlayerDirectory from \"./Modules/PlayerDirectory\";\nimport YouWin from \"./Modules/YouWin\";\nimport OverallRanking from \"./Modules/OverallRanking\";\nimport PlayerProfile from \"./Modules/PlayerProfile\";\nimport { CommonColors, CommonStyles } from \"./Modules/style\";\nimport model from \"./components/model\";\nLogBox.ignoreAllLogs();\nvar Stack = createStackNavigator();\nvar Drawer = createDrawerNavigator();\nvar RootStack = createStackNavigator();\n\nvar Root = function Root() {\n  return React.createElement(Drawer.Navigator, {\n    initialRouteName: \"MyRabbitCards\",\n    drawerContent: function drawerContent(props) {\n      return React.createElement(Sidebar, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 31\n        }\n      }));\n    },\n    screenOptions: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"MyRabbitCards\",\n    component: MyRabbitCards,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"ChooseDates\",\n    component: ChooseDates,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Sponsors\",\n    component: PurseSponsors,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Directory\",\n    component: PlayerDirectory,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"OverallRankings\",\n    component: OverallRanking,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Rankings\",\n    component: MyTournamentRanking,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Account\",\n    component: ResetPassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar Auth = function Auth() {\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    initialRouteName: \"Home\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 10\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Create Account\",\n    component: CreateAccount,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: StartScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Sign In\",\n    component: SignIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Forgot Password\",\n    component: ForgotPassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"SentEmail\",\n    component: SentEmail,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ReEnterEmail\",\n    component: ReEnterEmail,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ResetTemporaryPassword\",\n    component: ResetTemporaryPassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar RootNavigator = function RootNavigator() {\n  var state = useSelector(function (state) {\n    return state.auth;\n  });\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontsLoaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  useEffect(function () {\n    dispatch(getLoggedUser());\n  }, []);\n\n  var loadFonts = function loadFonts() {\n    return _regeneratorRuntime.async(function loadFonts$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Font.loadAsync({\n              SourceSansRomanBold: require(\"./assets/SourceSansPro-Bold.ttf\"),\n              SourceSansRomanRegular: require(\"./assets/SourceSansPro-Regular.ttf\"),\n              SourceSansRomanBlack: require(\"./assets/SourceSansPro-Black.ttf\"),\n              SourceSansBlackItalic: require(\"./assets/SourceSansPro-BlackItalic.ttf\"),\n              SourceSansRomanBoldItalic: require(\"./assets/SourceSansPro-BoldItalic.ttf\"),\n              SourceSansRomanExtraLight: require(\"./assets/SourceSansPro-ExtraLight.ttf\"),\n              SourceSansItalicLightItalic: require(\"./assets/SourceSansPro-ExtraLightItalic.ttf\"),\n              SourceSansRomanItalic: require(\"./assets/SourceSansPro-Italic.ttf\"),\n              SourceSansRomanLight: require(\"./assets/SourceSansPro-Light.ttf\"),\n              SourceSansRomanLightItalic: require(\"./assets/SourceSansPro-LightItalic.ttf\"),\n              SourceSansRomanSemiBold: require(\"./assets/SourceSansPro-SemiBold.ttf\"),\n              SourceSansRomanSemiBoldItalic: require(\"./assets/SourceSansPro-SemiBoldItalic.ttf\")\n            }));\n\n          case 2:\n            setLoaded(true);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    loadFonts();\n  }, []);\n\n  if (fontsLoaded && !state.appLoading) {\n    return React.createElement(NavigationContainer, {\n      style: CommonStyles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      initialRouteName: \"Auth\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, !state.loggedIn && React.createElement(Stack.Screen, {\n      name: \"Auth\",\n      component: Auth,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 31\n      }\n    }), state.loggedIn && React.createElement(Stack.Screen, {\n      name: \"Root\",\n      component: Root,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 30\n      }\n    }), state.loggedIn && React.createElement(RootStack.Group, {\n      screenOptions: {\n        presentation: 'card'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, React.createElement(RootStack.Screen, {\n      name: \"Sponsor\",\n      component: Sponsor,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }), React.createElement(RootStack.Screen, {\n      name: \"SponsorGalary\",\n      component: SponsorGalary,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }), React.createElement(RootStack.Screen, {\n      name: \"TournamentChoices\",\n      component: TournamentChoices,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }), React.createElement(RootStack.Screen, {\n      name: \"NoChoice\",\n      component: NoChoice,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }), React.createElement(RootStack.Screen, {\n      name: \"CreateRabbitCards\",\n      component: CreateRabbitCards,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }), React.createElement(RootStack.Screen, {\n      name: \"Countdown\",\n      component: TournamentCountDown,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }), React.createElement(RootStack.Screen, {\n      name: \"Pairings\",\n      component: Paring,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }), React.createElement(RootStack.Screen, {\n      name: \"YouWin\",\n      component: YouWin,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }), React.createElement(RootStack.Screen, {\n      name: \"CompeteTournamentSelection\",\n      component: CompeteTournamentSelection,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }), React.createElement(RootStack.Screen, {\n      name: \"Shipping\",\n      component: MyRabbitPurseShipping,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }), React.createElement(RootStack.Screen, {\n      name: \"Purse\",\n      component: MyRabbitPurse,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }), React.createElement(RootStack.Screen, {\n      name: \"Thank You\",\n      component: Thankyou,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }), React.createElement(RootStack.Screen, {\n      name: \"SummaryPlayed\",\n      component: RabbitCardSummaryPlayed,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }), React.createElement(RootStack.Screen, {\n      name: \"SummaryInProgress\",\n      component: RabbitCardSummaryInProgress,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }), React.createElement(RootStack.Screen, {\n      name: \"TournamentPushNotification\",\n      component: TournamentPushNotification,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }), React.createElement(RootStack.Screen, {\n      name: \"Calc\",\n      component: TournamentCalc,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }), React.createElement(RootStack.Screen, {\n      name: \"ReadyToPlay\",\n      component: RabbitCardReadyToPlay,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }\n    }), React.createElement(RootStack.Screen, {\n      name: \"ReadyToPlaySummary\",\n      component: RabbitCardReadyToPlaySummary,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }\n    }), React.createElement(RootStack.Screen, {\n      name: \"TieBreaker\",\n      component: TieBreaker,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }), React.createElement(RootStack.Screen, {\n      name: \"model\",\n      component: model,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    })), state.loggedIn && React.createElement(RootStack.Group, {\n      screenOptions: {\n        presentation: 'modal'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 30\n      }\n    }, React.createElement(RootStack.Screen, {\n      name: \"PlayerProfile\",\n      component: PlayerProfile,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }))));\n  } else {\n    return React.createElement(View, {\n      style: [CommonStyles.container, {\n        backgroundColor: 'transparent',\n        alignItems: 'center',\n        justifyContent: 'center'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 12\n      }\n    }, React.createElement(ActivityIndicator, {\n      color: CommonColors.Green,\n      size: \"large\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  ;\n};\n\nexport default App = function App() {\n  return React.createElement(Provider, {\n    store: store,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 3\n    }\n  }, React.createElement(RootNavigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/thinktanker/Downloads/pgaRabbitCard-master/rabbitfront1/App.js"],"names":["React","useState","useEffect","LogBox","Provider","useSelector","useDispatch","Font","store","NavigationContainer","createStackNavigator","createDrawerNavigator","getLoggedUser","StartScreen","SignIn","CreateAccount","ForgotPassword","SentEmail","ReEnterEmail","ResetPassword","ResetTemporaryPassword","Sidebar","MyRabbitCards","CreateRabbitCards","ChooseDates","TournamentChoices","NoChoice","TournamentCountDown","Paring","RabbitCardSummaryPlayed","RabbitCardSummaryInProgress","TournamentPushNotification","RabbitCardReadyToPlay","RabbitCardReadyToPlaySummary","CompeteTournamentSelection","TieBreaker","TournamentCalc","PurseSponsors","Sponsor","SponsorGalary","MyRabbitPurse","MyRabbitPurseShipping","Thankyou","MyTournamentRanking","PlayerDirectory","YouWin","OverallRanking","PlayerProfile","CommonColors","CommonStyles","model","ignoreAllLogs","Stack","Drawer","RootStack","Root","props","headerShown","Auth","RootNavigator","state","auth","dispatch","fontsLoaded","setLoaded","loadFonts","loadAsync","SourceSansRomanBold","require","SourceSansRomanRegular","SourceSansRomanBlack","SourceSansBlackItalic","SourceSansRomanBoldItalic","SourceSansRomanExtraLight","SourceSansItalicLightItalic","SourceSansRomanItalic","SourceSansRomanLight","SourceSansRomanLightItalic","SourceSansRomanSemiBold","SourceSansRomanSemiBoldItalic","appLoading","container","loggedIn","presentation","backgroundColor","alignItems","justifyContent","Green","App"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, ActivityIndicator, LogBox } from 'react-native';\nimport { Provider, useSelector, useDispatch } from 'react-redux';\nimport * as Font from 'expo-font';\nimport { store } from './store';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { getLoggedUser } from './store/redux/auth/actions';\nimport StartScreen from \"./Modules/Start\";\nimport SignIn from \"./Modules/SignIn\";\nimport CreateAccount from \"./Modules/CreateAccount\";\nimport ForgotPassword from \"./Modules/ForgotPassword\";\nimport SentEmail from \"./Modules/SentEmail\";\nimport ReEnterEmail from \"./Modules/ReEnterEmail\";\nimport ResetPassword from \"./Modules/ResetPassword\";\nimport ResetTemporaryPassword from './Modules/ResetTemporaryPassword';\nimport Sidebar from \"./Modules/Sidebar\";\nimport MyRabbitCards from \"./Modules/MyRabbitCards\";\nimport CreateRabbitCards from \"./Modules/CreateRabbitCards\";\nimport ChooseDates from \"./Modules/ChooseDates\";\nimport TournamentChoices from \"./Modules/TournamentChoices\";\nimport NoChoice from \"./Modules/NoChoice\";\nimport TournamentCountDown from \"./Modules/TournamentCountDown\";\nimport Paring from \"./Modules/Paring\";\nimport RabbitCardSummaryPlayed from \"./Modules/RabbitCardSummary\";\nimport RabbitCardSummaryInProgress from \"./Modules/RabbitCardSummaryInProgress\";\nimport TournamentPushNotification from \"./Modules/TournamentPushNotification\";\nimport RabbitCardReadyToPlay from \"./Modules/RabbitCardReadyToPlay\";\nimport RabbitCardReadyToPlaySummary from \"./Modules/RabbitCardReadyToPlaySummary\";\nimport CompeteTournamentSelection from \"./Modules/CompeteTournamentSelection\";\nimport TieBreaker from \"./Modules/TieBreaker\";\nimport TournamentCalc from \"./Modules/TournamentCalc\";\nimport PurseSponsors from \"./Modules/PurseSponsors\";\nimport Sponsor from \"./Modules/Sponsor\";\nimport SponsorGalary from './Modules/SponsorGalary';\nimport MyRabbitPurse from \"./Modules/MyRabbitPurse\";\nimport MyRabbitPurseShipping from \"./Modules/MyRabbitPurseShipping\";\nimport Thankyou from \"./Modules/Thankyou\";\nimport MyTournamentRanking from \"./Modules/MyTournamentRanking\";\nimport PlayerDirectory from \"./Modules/PlayerDirectory\";\nimport YouWin from \"./Modules/YouWin\";\nimport OverallRanking from \"./Modules/OverallRanking\";\nimport PlayerProfile from \"./Modules/PlayerProfile\";\nimport { CommonColors, CommonStyles } from './Modules/style';\nimport model from './components/model'\n\nLogBox.ignoreAllLogs()\n\nconst Stack = createStackNavigator();\nconst Drawer = createDrawerNavigator();\nconst RootStack = createStackNavigator();\n\nconst Root = () => {\n  return (\n    <Drawer.Navigator\n      initialRouteName=\"MyRabbitCards\"\n      drawerContent={props => <Sidebar {...props} />}\n      screenOptions={{ headerShown: false }}\n    >\n      <Drawer.Screen name=\"MyRabbitCards\" component={MyRabbitCards} />\n      <Drawer.Screen name=\"ChooseDates\" component={ChooseDates} />\n      <Drawer.Screen name=\"Sponsors\" component={PurseSponsors} />\n      <Drawer.Screen name=\"Directory\" component={PlayerDirectory} />\n      <Drawer.Screen name=\"OverallRankings\" component={OverallRanking} />\n      <Drawer.Screen name=\"Rankings\" component={MyTournamentRanking} />\n      <Drawer.Screen name=\"Account\" component={ResetPassword} />\n    </Drawer.Navigator>\n  );\n}\n\nconst Auth = () => {\n  return <Stack.Navigator screenOptions={{ headerShown: false }} initialRouteName=\"Home\">\n    <Stack.Screen name=\"Create Account\" component={CreateAccount} />\n    <Stack.Screen name=\"Home\" component={StartScreen} />\n    <Stack.Screen name=\"Sign In\" component={SignIn} />\n    <Stack.Screen name=\"Forgot Password\" component={ForgotPassword} />\n    <Stack.Screen name=\"SentEmail\" component={SentEmail} />\n    <Stack.Screen name=\"ReEnterEmail\" component={ReEnterEmail} />\n    <Stack.Screen name=\"ResetTemporaryPassword\" component={ResetTemporaryPassword} />\n  </Stack.Navigator>\n}\n\nconst RootNavigator = () => {\n  const state = useSelector((state) => state.auth);\n  const dispatch = useDispatch()\n  const [fontsLoaded, setLoaded] = useState(false)\n\n  useEffect(() => {\n    dispatch(getLoggedUser());\n  }, []);\n\n  const loadFonts = async () => {\n    await Font.loadAsync({\n      // Load a font `Montserrat` from a static resource\n      SourceSansRomanBold: require('./assets/SourceSansPro-Bold.ttf'),\n      SourceSansRomanRegular: require('./assets/SourceSansPro-Regular.ttf'),\n      SourceSansRomanBlack: require('./assets/SourceSansPro-Black.ttf'),\n      SourceSansBlackItalic: require('./assets/SourceSansPro-BlackItalic.ttf'),\n      SourceSansRomanBoldItalic: require('./assets/SourceSansPro-BoldItalic.ttf'),\n      SourceSansRomanExtraLight: require('./assets/SourceSansPro-ExtraLight.ttf'),\n      SourceSansItalicLightItalic: require('./assets/SourceSansPro-ExtraLightItalic.ttf'),\n      SourceSansRomanItalic: require('./assets/SourceSansPro-Italic.ttf'),\n      SourceSansRomanLight: require('./assets/SourceSansPro-Light.ttf'),\n      SourceSansRomanLightItalic: require('./assets/SourceSansPro-LightItalic.ttf'),\n      SourceSansRomanSemiBold: require('./assets/SourceSansPro-SemiBold.ttf'),\n      SourceSansRomanSemiBoldItalic: require('./assets/SourceSansPro-SemiBoldItalic.ttf'),\n    });\n    setLoaded(true)\n  }\n\n  useEffect(() => {\n    loadFonts()\n  }, [])\n\n  if (fontsLoaded && !state.appLoading) {\n    return (\n      <NavigationContainer style={CommonStyles.container}>\n        <Stack.Navigator screenOptions={{ headerShown: false }} initialRouteName=\"Auth\">\n          {!state.loggedIn && <Stack.Screen name=\"Auth\" component={Auth} />}\n          {state.loggedIn && <Stack.Screen name=\"Root\" component={Root} />}\n          {state.loggedIn &&\n            <RootStack.Group screenOptions={{ presentation: 'card' }}>\n              <RootStack.Screen name=\"Sponsor\" component={Sponsor} />\n              <RootStack.Screen name=\"SponsorGalary\" component={SponsorGalary} />\n\n              <RootStack.Screen name=\"TournamentChoices\" component={TournamentChoices} />\n              <RootStack.Screen name=\"NoChoice\" component={NoChoice} />\n\n              <RootStack.Screen name=\"CreateRabbitCards\" component={CreateRabbitCards} />\n              <RootStack.Screen name=\"Countdown\" component={TournamentCountDown} />\n              <RootStack.Screen name=\"Pairings\" component={Paring} />\n\n              <RootStack.Screen name=\"YouWin\" component={YouWin} />\n              <RootStack.Screen name=\"CompeteTournamentSelection\" component={CompeteTournamentSelection} />\n              <RootStack.Screen name=\"Shipping\" component={MyRabbitPurseShipping} />\n\n              <RootStack.Screen name=\"Purse\" component={MyRabbitPurse} />\n              <RootStack.Screen name=\"Thank You\" component={Thankyou} />\n\n              <RootStack.Screen name=\"SummaryPlayed\" component={RabbitCardSummaryPlayed} />\n              <RootStack.Screen name=\"SummaryInProgress\" component={RabbitCardSummaryInProgress} />\n              <RootStack.Screen name=\"TournamentPushNotification\" component={TournamentPushNotification} />\n              <RootStack.Screen name=\"Calc\" component={TournamentCalc} />\n              <RootStack.Screen name=\"ReadyToPlay\" component={RabbitCardReadyToPlay} />\n              <RootStack.Screen name=\"ReadyToPlaySummary\" component={RabbitCardReadyToPlaySummary} />\n              <RootStack.Screen name=\"TieBreaker\" component={TieBreaker} />\n              <RootStack.Screen name=\"model\" component={model} />\n            </RootStack.Group>\n          }\n          {state.loggedIn && <RootStack.Group screenOptions={{ presentation: 'modal' }}>\n            <RootStack.Screen name=\"PlayerProfile\" component={PlayerProfile} />\n          </RootStack.Group>}\n        </Stack.Navigator>\n      </NavigationContainer>\n    )\n  } else {\n    return <View style={[CommonStyles.container, {\n      backgroundColor: 'transparent',\n      alignItems: 'center',\n      justifyContent: 'center',\n    }]}>\n      <ActivityIndicator color={CommonColors.Green} size=\"large\" />\n    </View>\n  };\n}\n\nexport default App = () =>\n  <Provider store={store}>\n    <RootNavigator />\n  </Provider>\n"]},"metadata":{},"sourceType":"module"}