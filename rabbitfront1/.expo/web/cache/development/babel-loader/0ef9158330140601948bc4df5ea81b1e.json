{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/thinktanker/Downloads/pgaRabbitCard-master/rabbitfront1/Modules/ResetTemporaryPassword.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { clearSignUpError, resetTempPassword } from \"../store/redux/auth/actions\";\nimport { CommonColors, CommonStyles } from \"./style\";\nimport { FBIcon, GoogleIcon, UnderlineIcon } from \"../components/icons\";\nimport { BackButton, Button, LoadingContainer } from \"../components/Button\";\nimport { w, h } from \"../utils/scale\";\n\nvar ResetTemporaryPassword = function ResetTemporaryPassword(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var dispatch = useDispatch();\n  var auth = useSelector(function (state) {\n    return state.auth;\n  });\n  var email = route.params.email;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      passwordInputs = _useState2[0],\n      setInputs = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errors = _useState4[0],\n      setErrors = _useState4[1];\n\n  useEffect(function () {\n    dispatch(clearSignUpError());\n  }, []);\n\n  var _onChangeText = function onChangeText(field, value) {\n    dispatch(clearSignUpError());\n    setInputs(_objectSpread(_objectSpread({}, passwordInputs), {}, _defineProperty({}, field, value)));\n    setErrors(_objectSpread(_objectSpread({}, errors), {}, _defineProperty({}, field, '')));\n  };\n\n  var onSubmit = function onSubmit() {\n    var errors = {};\n\n    if (passwordInputs.new_password2 !== passwordInputs.new_password1) {\n      errors.password = 'Password does not match';\n    }\n\n    if (Object.keys(errors).length > 0) {\n      setErrors(errors);\n    } else {\n      var inputs = {\n        email: email,\n        code: passwordInputs.old_password,\n        password: passwordInputs.new_password1\n      };\n      dispatch(resetTempPassword({\n        inputs: inputs,\n        navigation: navigation\n      }));\n    }\n  };\n\n  return React.createElement(View, {\n    style: CommonStyles.overflowContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, auth.loading && React.createElement(LoadingContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 24\n    }\n  }), React.createElement(BackButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), React.createElement(SafeAreaView, {\n    style: CommonStyles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    style: CommonStyles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: [CommonStyles.padding, CommonStyles.paddingT100],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: CommonStyles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Reset Password\"), React.createElement(View, {\n    style: styles.padding20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, React.createElement(UnderlineIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: styles.section,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.textContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    secureTextEntry: true,\n    style: CommonStyles.textInput,\n    onChangeText: function onChangeText(text) {\n      return _onChangeText('old_password', text);\n    },\n    value: passwordInputs.old_password,\n    placeholder: \"Temporary Password\",\n    keyboardType: \"default\",\n    placeholderTextColor: CommonColors.Dark,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.textContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    secureTextEntry: true,\n    style: CommonStyles.textInput,\n    onChangeText: function onChangeText(text) {\n      return _onChangeText('new_password1', text);\n    },\n    value: passwordInputs.new_password1,\n    placeholder: \"New Password\",\n    keyboardType: \"default\",\n    placeholderTextColor: CommonColors.Dark,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.textContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    secureTextEntry: true,\n    style: CommonStyles.textInput,\n    onChangeText: function onChangeText(text) {\n      return _onChangeText('new_password2', text);\n    },\n    value: passwordInputs.new_password2,\n    placeholder: \"Conform Password\",\n    keyboardType: \"default\",\n    placeholderTextColor: CommonColors.Dark,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }), errors.password ? React.createElement(Text, {\n    style: CommonStyles.errorText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 36\n    }\n  }, errors.password) : React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 100\n    }\n  })), auth.error ? React.createElement(Text, {\n    style: CommonStyles.errorText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, auth.error) : React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 88\n    }\n  }))))), React.createElement(Button, {\n    title: \"RESET\",\n    onPress: function onPress() {\n      return onSubmit();\n    },\n    backgroundColor: CommonColors.Green,\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  resetTempPassword: resetTempPassword,\n  clearSignUpError: clearSignUpError\n})(ResetTemporaryPassword);\nvar styles = StyleSheet.create({\n  padding20: {\n    paddingVertical: w(20)\n  },\n  section: {\n    paddingTop: w(100),\n    paddingHorizontal: w(60)\n  },\n  textContainer: {\n    paddingVertical: w(40)\n  },\n  row: {\n    paddingTop: w(40),\n    flexDirection: 'row',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/thinktanker/Downloads/pgaRabbitCard-master/rabbitfront1/Modules/ResetTemporaryPassword.js"],"names":["React","useEffect","useState","connect","useDispatch","useSelector","clearSignUpError","resetTempPassword","CommonColors","CommonStyles","FBIcon","GoogleIcon","UnderlineIcon","BackButton","Button","LoadingContainer","w","h","ResetTemporaryPassword","navigation","route","dispatch","auth","state","email","params","passwordInputs","setInputs","errors","setErrors","onChangeText","field","value","onSubmit","new_password2","new_password1","password","Object","keys","length","inputs","code","old_password","overflowContainer","loading","container","padding","paddingT100","title","styles","padding20","section","textContainer","textInput","text","Dark","errorText","error","Green","width","mapStateToProps","StyleSheet","create","paddingVertical","paddingTop","paddingHorizontal","row","flexDirection","alignItems"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, TextInput, ScrollView, SafeAreaView } from 'react-native';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { clearSignUpError, resetTempPassword } from '../store/redux/auth/actions';\nimport { CommonColors, CommonStyles } from './style';\nimport { FBIcon, GoogleIcon, UnderlineIcon } from '../components/icons';\nimport { BackButton, Button, LoadingContainer } from '../components/Button';\nimport { w, h } from '../utils/scale';\n\nconst ResetTemporaryPassword = ({ navigation, route }) => {\n  const dispatch = useDispatch();\n  const auth = useSelector((state) => state.auth);\n  const { email } = route.params;\n  const [passwordInputs, setInputs] = useState({});\n  const [errors, setErrors] = useState({});\n\n  useEffect(() => {\n    dispatch(clearSignUpError())\n  }, [])\n\n  const onChangeText = (field, value) => {\n    dispatch(clearSignUpError());\n    setInputs({ ...passwordInputs, [field]: value });\n    setErrors({ ...errors, [field]: '' });\n  };\n\n  const onSubmit = () => {\n    let errors = {};\n    if (passwordInputs.new_password2 !== passwordInputs.new_password1) {\n      errors.password = 'Password does not match';\n    }\n    if (Object.keys(errors).length > 0) {\n      setErrors(errors);\n    } else {\n      const inputs = {\n        email: email,\n        code: passwordInputs.old_password,\n        password: passwordInputs.new_password1\n      }\n      dispatch(resetTempPassword({ inputs, navigation }));\n    }\n  };\n\n  return (\n    <View style={CommonStyles.overflowContainer}>\n      {auth.loading && <LoadingContainer />}\n      <BackButton />\n      <SafeAreaView style={CommonStyles.container}>\n        <ScrollView style={CommonStyles.container}>\n          <View style={[CommonStyles.padding, CommonStyles.paddingT100]}>\n            <Text style={CommonStyles.title}>Reset Password</Text>\n            <View style={styles.padding20}>\n              <UnderlineIcon />\n            </View>\n            <View style={styles.section}>\n              <View style={styles.textContainer}>\n                <TextInput\n                  secureTextEntry\n                  style={CommonStyles.textInput}\n                  onChangeText={(text) => onChangeText('old_password', text)}\n                  value={passwordInputs.old_password}\n                  placeholder=\"Temporary Password\"\n                  keyboardType=\"default\"\n                  placeholderTextColor={CommonColors.Dark}\n                />\n              </View>\n              <View style={styles.textContainer}>\n                <TextInput\n                  secureTextEntry\n                  style={CommonStyles.textInput}\n                  onChangeText={(text) => onChangeText('new_password1', text)}\n                  value={passwordInputs.new_password1}\n                  placeholder=\"New Password\"\n                  keyboardType=\"default\"\n                  placeholderTextColor={CommonColors.Dark}\n                />\n              </View>\n              <View style={styles.textContainer}>\n                <TextInput\n                  secureTextEntry\n                  style={CommonStyles.textInput}\n                  onChangeText={(text) => onChangeText('new_password2', text)}\n                  value={passwordInputs.new_password2}\n                  placeholder=\"Conform Password\"\n                  keyboardType=\"default\"\n                  placeholderTextColor={CommonColors.Dark}\n                />\n                {errors.password ? <Text style={CommonStyles.errorText}>{errors.password}</Text> : <View />}\n              </View>\n              {auth.error ? <Text style={CommonStyles.errorText}>{auth.error}</Text> : <View />}\n            </View>\n          </View>\n        </ScrollView>\n      </SafeAreaView>\n      <Button title=\"RESET\" onPress={() => onSubmit()} backgroundColor={CommonColors.Green} style={{ width: '100%' }} />\n    </View>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  loading: state.auth.loading,\n  error: state.auth.error,\n});\n\nexport default connect(mapStateToProps, { resetTempPassword, clearSignUpError })(ResetTemporaryPassword);\n\nconst styles = StyleSheet.create({\n  padding20: {\n    paddingVertical: w(20)\n  },\n  section: {\n    paddingTop: w(100),\n    paddingHorizontal: w(60),\n  },\n  textContainer: {\n    paddingVertical: w(40)\n  },\n  row: {\n    paddingTop: w(40),\n    flexDirection: 'row',\n    alignItems: 'center'\n  }\n});"]},"metadata":{},"sourceType":"module"}