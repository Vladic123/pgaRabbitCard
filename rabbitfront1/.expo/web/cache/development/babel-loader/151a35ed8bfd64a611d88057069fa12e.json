{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/thinktanker/Downloads/pgaRabbitCard-master/rabbitfront1/Modules/ChooseDates.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport DateRangePicker from \"rn-select-date-range\";\nimport { useIsFocused } from '@react-navigation/native';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport moment from \"moment\";\nimport { Button, LoadingContainer, Menu } from \"../components/Button\";\nimport { UnderlineIcon } from \"../components/icons\";\nimport { getTournamentByRange } from \"../store/redux/tournaments/actions\";\nimport { w, h } from \"../utils/scale\";\nimport { CommonColors, CommonStyles } from \"./style\";\nimport { sponsors } from \"./PurseSponsors\";\nvar currentFormatString = \"YYYY-MM-DD\";\nvar newFormatString = \"dddd, MMMM DD, YYYY\";\n\nvar ChooseDates = function ChooseDates(_ref) {\n  var navigation = _ref.navigation;\n  var isFocused = useIsFocused();\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.tournaments;\n  }),\n      loading = _useSelector.loading,\n      error = _useSelector.error;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedRange = _useState2[0],\n      setRange = _useState2[1];\n\n  useEffect(function () {\n    if (isFocused) {\n      setRange({});\n    }\n  }, [isFocused]);\n\n  var onSubmit = function onSubmit() {\n    if (selectedRange.firstDate && selectedRange.secondDate) {\n      dispatch(getTournamentByRange({\n        startDate: selectedRange.firstDate,\n        endDate: selectedRange.secondDate,\n        navigation: navigation\n      }));\n    } else {\n      Alert.alert(\"Please choose dates.\");\n    }\n  };\n\n  var startDate = moment(selectedRange.firstDate, currentFormatString).format(newFormatString);\n  var endDate = moment(selectedRange.secondDate, currentFormatString).format(newFormatString);\n  return React.createElement(View, {\n    style: CommonStyles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, React.createElement(Menu, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }), loading && React.createElement(LoadingContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), error && React.createElement(Text, {\n    style: CommonStyles.errorText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, error), React.createElement(SafeAreaView, {\n    style: CommonStyles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: CommonStyles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: [CommonStyles.padding, {\n      paddingTop: w(100)\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: CommonStyles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Choose Dates\"), React.createElement(View, {\n    style: styles.padding20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, React.createElement(UnderlineIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }))), React.createElement(View, {\n    style: [styles.row],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.dateContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: CommonStyles.rowTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Start Date\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {},\n    style: styles.date,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: CommonStyles.sectionTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, selectedRange.firstDate && startDate))), React.createElement(View, {\n    style: styles.dateContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: CommonStyles.rowTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"End Date\"), React.createElement(View, {\n    style: styles.date,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: CommonStyles.sectionTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, selectedRange.secondDate && endDate)))), React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, React.createElement(DateRangePicker, {\n    onSelectDateRange: function onSelectDateRange(range) {\n      setRange(range);\n    },\n    blockSingleDateSelection: true,\n    responseFormat: currentFormatString,\n    maxDate: null,\n    minDate: null,\n    selectedDateContainerStyle: styles.selectedDateContainerStyle,\n    selectedDateStyle: styles.selectedDateStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  })))), React.createElement(View, {\n    style: styles.bottom,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.left,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.leftTop,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: CommonStyles.sectionTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"RABBIT PURSE SPONSORS\")), React.createElement(ScrollView, {\n    horizontal: true,\n    style: {\n      paddingVertical: w(20),\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, sponsors.map(function (sponsor, index) {\n    return React.createElement(TouchableOpacity, {\n      style: {\n        paddingHorizontal: w(20)\n      },\n      onPress: function onPress() {\n        return navigation.navigate('Sponsor', {\n          sponsor: sponsor\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 45\n      }\n    }, React.createElement(Image, {\n      source: sponsor.image,\n      style: styles.brand,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }));\n  })))), React.createElement(Button, {\n    title: \"CHOOSE TOURNAMENTS\",\n    onPress: function onPress() {\n      return onSubmit();\n    },\n    backgroundColor: CommonColors.Green,\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.tournaments.loading,\n    error: state.tournaments.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getTournamentByRange: getTournamentByRange\n})(ChooseDates);\nvar styles = StyleSheet.create({\n  padding20: {\n    paddingVertical: w(20)\n  },\n  row: {\n    flexDirection: 'row',\n    paddingHorizontal: w(40)\n  },\n  dateContainer: {\n    flex: 1,\n    paddingRight: w(20)\n  },\n  date: {\n    backgroundColor: CommonColors.White,\n    padding: w(10),\n    minHeight: w(100),\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: w(20)\n  },\n  container: {\n    marginHorizontal: w(40),\n    marginVertical: w(40),\n    backgroundColor: CommonColors.White\n  },\n  selectedDateContainerStyle: {\n    height: w(60),\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: CommonColors.Green\n  },\n  selectedDateStyle: {\n    fontWeight: \"bold\",\n    color: CommonColors.White\n  },\n  bottom: {\n    backgroundColor: CommonColors.White,\n    paddingLeft: w(40),\n    paddingVertical: w(20),\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  brand: {\n    width: w(120),\n    height: w(50),\n    resizeMode: 'stretch'\n  }\n});","map":{"version":3,"sources":["/Users/thinktanker/Downloads/pgaRabbitCard-master/rabbitfront1/Modules/ChooseDates.js"],"names":["React","useEffect","useState","DateRangePicker","useIsFocused","connect","useDispatch","useSelector","moment","Button","LoadingContainer","Menu","UnderlineIcon","getTournamentByRange","w","h","CommonColors","CommonStyles","sponsors","currentFormatString","newFormatString","ChooseDates","navigation","isFocused","dispatch","state","tournaments","loading","error","selectedRange","setRange","onSubmit","firstDate","secondDate","startDate","endDate","Alert","alert","format","container","errorText","padding","paddingTop","title","styles","padding20","row","dateContainer","rowTitle","date","sectionTitle","range","selectedDateContainerStyle","selectedDateStyle","bottom","left","leftTop","paddingVertical","flexDirection","map","sponsor","index","paddingHorizontal","navigate","image","brand","Green","width","mapStateToProps","StyleSheet","create","flex","paddingRight","backgroundColor","White","minHeight","alignItems","justifyContent","marginTop","marginHorizontal","marginVertical","height","fontWeight","color","paddingLeft","resizeMode"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;;;AAEA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,WAA/B,QAAkD,aAAlD;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,MAAT,EAAiBC,gBAAjB,EAAmCC,IAAnC;AACA,SAASC,aAAT;AACA,SAASC,oBAAT;AACA,SAASC,CAAT,EAAYC,CAAZ;AACA,SAASC,YAAT,EAAuBC,YAAvB;AACA,SAASC,QAAT;AAEA,IAAMC,mBAAmB,GAAG,YAA5B;AACA,IAAMC,eAAe,GAAG,qBAAxB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AACtC,MAAMC,SAAS,GAAGnB,YAAY,EAA9B;AACA,MAAMoB,QAAQ,GAAGlB,WAAW,EAA5B;;AACA,qBAA2BC,WAAW,CAAC,UAACkB,KAAD;AAAA,WAAWA,KAAK,CAACC,WAAjB;AAAA,GAAD,CAAtC;AAAA,MAAQC,OAAR,gBAAQA,OAAR;AAAA,MAAiBC,KAAjB,gBAAiBA,KAAjB;;AACA,kBAAkC1B,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAO2B,aAAP;AAAA,MAAsBC,QAAtB;;AAEA7B,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIsB,SAAJ,EAAe;AACbO,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;AACF,GAJQ,EAIN,CAACP,SAAD,CAJM,CAAT;;AAMA,MAAMQ,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,QAAIF,aAAa,CAACG,SAAd,IAA2BH,aAAa,CAACI,UAA7C,EAAyD;AACvDT,MAAAA,QAAQ,CAACX,oBAAoB,CAAC;AAC5BqB,QAAAA,SAAS,EAAEL,aAAa,CAACG,SADG;AAE5BG,QAAAA,OAAO,EAAEN,aAAa,CAACI,UAFK;AAG5BX,QAAAA,UAAU,EAAVA;AAH4B,OAAD,CAArB,CAAR;AAKD,KAND,MAMO;AACLc,MAAAA,KAAK,CAACC,KAAN,CAAY,sBAAZ;AACD;AACF,GAVD;;AAYA,MAAMH,SAAS,GAAG1B,MAAM,CAACqB,aAAa,CAACG,SAAf,EAA0Bb,mBAA1B,CAAN,CAAqDmB,MAArD,CAA4DlB,eAA5D,CAAlB;AACA,MAAMe,OAAO,GAAG3B,MAAM,CAACqB,aAAa,CAACI,UAAf,EAA2Bd,mBAA3B,CAAN,CAAsDmB,MAAtD,CAA6DlB,eAA7D,CAAhB;AAEA,SAAQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,YAAY,CAACsB,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACN,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,EAELZ,OAAO,IAAI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFN,EAGLC,KAAK,IAAI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,YAAY,CAACuB,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCZ,KAAtC,CAHJ,EAIN,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEX,YAAY,CAACsB,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEtB,YAAY,CAACsB,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACtB,YAAY,CAACwB,OAAd,EAAuB;AAAEC,MAAAA,UAAU,EAAE5B,CAAC,CAAC,GAAD;AAAf,KAAvB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,YAAY,CAAC0B,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF,EAQE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACD,MAAM,CAACE,GAAR,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE9B,YAAY,CAAC+B,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE,mBAAM,CAAG,CAApC;AAAsC,IAAA,KAAK,EAAEJ,MAAM,CAACK,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhC,YAAY,CAACiC,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrB,aAAa,CAACG,SAAd,IAA2BE,SAD9B,CADF,CAFF,CADF,EASE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEU,MAAM,CAACG,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE9B,YAAY,CAAC+B,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhC,YAAY,CAACiC,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrB,aAAa,CAACI,UAAd,IAA4BE,OAD/B,CADF,CAFF,CATF,CARF,EA0BE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAES,MAAM,CAACL,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AACE,IAAA,iBAAiB,EAAE,2BAACY,KAAD,EAAW;AAC5BrB,MAAAA,QAAQ,CAACqB,KAAD,CAAR;AACD,KAHH;AAIE,IAAA,wBAAwB,EAAE,IAJ5B;AAKE,IAAA,cAAc,EAAEhC,mBALlB;AAME,IAAA,OAAO,EAAE,IANX;AAOE,IAAA,OAAO,EAAE,IAPX;AAQE,IAAA,0BAA0B,EAAEyB,MAAM,CAACQ,0BARrC;AASE,IAAA,iBAAiB,EAAER,MAAM,CAACS,iBAT5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA1BF,CADF,CAJM,EA8CN,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACU,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACW,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACY,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvC,YAAY,CAACiC,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CADF,EAIE,oBAAC,UAAD;AAAY,IAAA,UAAU,MAAtB;AAAuB,IAAA,KAAK,EAAE;AAAEO,MAAAA,eAAe,EAAE3C,CAAC,CAAC,EAAD,CAApB;AAA0B4C,MAAAA,aAAa,EAAE;AAAzC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGxC,QAAQ,CAACyC,GAAT,CAAa,UAACC,OAAD,EAAUC,KAAV;AAAA,WAAoB,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAE;AAAEC,QAAAA,iBAAiB,EAAEhD,CAAC,CAAC,EAAD;AAAtB,OAAzB;AAAuD,MAAA,OAAO,EAAE;AAAA,eAAMQ,UAAU,CAACyC,QAAX,CAAoB,SAApB,EAA+B;AAAEH,UAAAA,OAAO,EAAPA;AAAF,SAA/B,CAAN;AAAA,OAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAChC,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAEA,OAAO,CAACI,KAAvB;AAA8B,MAAA,KAAK,EAAEpB,MAAM,CAACqB,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADgC,CAApB;AAAA,GAAb,CADH,CAJF,CADF,CA9CM,EA0DN,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,oBAAd;AAAmC,IAAA,OAAO,EAAE;AAAA,aAAMlC,QAAQ,EAAd;AAAA,KAA5C;AAA8D,IAAA,eAAe,EAAEf,YAAY,CAACkD,KAA5F;AAAmG,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1DM,CAAR;AA6DD,CAxFD;;AA0FA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAC3C,KAAD;AAAA,SAAY;AAClCE,IAAAA,OAAO,EAAEF,KAAK,CAACC,WAAN,CAAkBC,OADO;AAElCC,IAAAA,KAAK,EAAEH,KAAK,CAACC,WAAN,CAAkBE;AAFS,GAAZ;AAAA,CAAxB;;AAKA,eAAevB,OAAO,CAAC+D,eAAD,EAAkB;AAAEvD,EAAAA,oBAAoB,EAApBA;AAAF,CAAlB,CAAP,CAAoDQ,WAApD,CAAf;AAEA,IAAMuB,MAAM,GAAGyB,UAAU,CAACC,MAAX,CAAkB;AAC/BzB,EAAAA,SAAS,EAAE;AACTY,IAAAA,eAAe,EAAE3C,CAAC,CAAC,EAAD;AADT,GADoB;AAI/BgC,EAAAA,GAAG,EAAE;AACHY,IAAAA,aAAa,EAAE,KADZ;AAEHI,IAAAA,iBAAiB,EAAEhD,CAAC,CAAC,EAAD;AAFjB,GAJ0B;AAQ/BiC,EAAAA,aAAa,EAAE;AACbwB,IAAAA,IAAI,EAAE,CADO;AAEbC,IAAAA,YAAY,EAAE1D,CAAC,CAAC,EAAD;AAFF,GARgB;AAY/BmC,EAAAA,IAAI,EAAE;AACJwB,IAAAA,eAAe,EAAEzD,YAAY,CAAC0D,KAD1B;AAEJjC,IAAAA,OAAO,EAAE3B,CAAC,CAAC,EAAD,CAFN;AAGJ6D,IAAAA,SAAS,EAAE7D,CAAC,CAAC,GAAD,CAHR;AAIJ8D,IAAAA,UAAU,EAAE,QAJR;AAKJC,IAAAA,cAAc,EAAE,QALZ;AAMJC,IAAAA,SAAS,EAAEhE,CAAC,CAAC,EAAD;AANR,GAZyB;AAoB/ByB,EAAAA,SAAS,EAAE;AACTwC,IAAAA,gBAAgB,EAAEjE,CAAC,CAAC,EAAD,CADV;AAETkE,IAAAA,cAAc,EAAElE,CAAC,CAAC,EAAD,CAFR;AAGT2D,IAAAA,eAAe,EAAEzD,YAAY,CAAC0D;AAHrB,GApBoB;AAyB/BtB,EAAAA,0BAA0B,EAAE;AAC1B6B,IAAAA,MAAM,EAAEnE,CAAC,CAAC,EAAD,CADiB;AAE1BqD,IAAAA,KAAK,EAAE,MAFmB;AAG1BS,IAAAA,UAAU,EAAE,QAHc;AAI1BC,IAAAA,cAAc,EAAE,QAJU;AAK1BJ,IAAAA,eAAe,EAAEzD,YAAY,CAACkD;AALJ,GAzBG;AAgC/Bb,EAAAA,iBAAiB,EAAE;AACjB6B,IAAAA,UAAU,EAAE,MADK;AAEjBC,IAAAA,KAAK,EAAEnE,YAAY,CAAC0D;AAFH,GAhCY;AAoC/BpB,EAAAA,MAAM,EAAE;AACNmB,IAAAA,eAAe,EAAEzD,YAAY,CAAC0D,KADxB;AAENU,IAAAA,WAAW,EAAEtE,CAAC,CAAC,EAAD,CAFR;AAGN2C,IAAAA,eAAe,EAAE3C,CAAC,CAAC,EAAD,CAHZ;AAIN4C,IAAAA,aAAa,EAAE,KAJT;AAKNkB,IAAAA,UAAU,EAAE,QALN;AAMNC,IAAAA,cAAc,EAAE;AANV,GApCuB;AA4C/BZ,EAAAA,KAAK,EAAE;AACLE,IAAAA,KAAK,EAAErD,CAAC,CAAC,GAAD,CADH;AAELmE,IAAAA,MAAM,EAAEnE,CAAC,CAAC,EAAD,CAFJ;AAGLuE,IAAAA,UAAU,EAAE;AAHP;AA5CwB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, Image, SafeAreaView, ScrollView, TouchableOpacity, Alert } from 'react-native';\nimport DateRangePicker from \"rn-select-date-range\";\nimport { useIsFocused } from '@react-navigation/native';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport moment from \"moment\";\nimport { Button, LoadingContainer, Menu } from '../components/Button';\nimport { UnderlineIcon } from '../components/icons';\nimport { getTournamentByRange } from '../store/redux/tournaments/actions';\nimport { w, h } from '../utils/scale'\nimport { CommonColors, CommonStyles } from './style';\nimport { sponsors } from './PurseSponsors';\n\nconst currentFormatString = \"YYYY-MM-DD\";\nconst newFormatString = \"dddd, MMMM DD, YYYY\";\n\nconst ChooseDates = ({ navigation }) => {\n  const isFocused = useIsFocused()\n  const dispatch = useDispatch();\n  const { loading, error } = useSelector((state) => state.tournaments);\n  const [selectedRange, setRange] = useState({});\n\n  useEffect(() => {\n    if (isFocused) {\n      setRange({})\n    }\n  }, [isFocused])\n\n  const onSubmit = () => {\n    if (selectedRange.firstDate && selectedRange.secondDate) {\n      dispatch(getTournamentByRange({\n        startDate: selectedRange.firstDate,\n        endDate: selectedRange.secondDate,\n        navigation\n      }))\n    } else {\n      Alert.alert(\"Please choose dates.\")\n    }\n  }\n\n  const startDate = moment(selectedRange.firstDate, currentFormatString).format(newFormatString)\n  const endDate = moment(selectedRange.secondDate, currentFormatString).format(newFormatString)\n\n  return (<View style={CommonStyles.container}>\n    <Menu />\n    {loading && <LoadingContainer />}\n    {error && <Text style={CommonStyles.errorText}>{error}</Text>}\n    <SafeAreaView style={CommonStyles.container}>\n      <ScrollView style={CommonStyles.container}>\n        <View style={[CommonStyles.padding, { paddingTop: w(100) }]}>\n          <Text style={CommonStyles.title}>Choose Dates</Text>\n          <View style={styles.padding20}>\n            <UnderlineIcon />\n          </View>\n        </View>\n\n        <View style={[styles.row]}>\n          <View style={styles.dateContainer}>\n            <Text style={CommonStyles.rowTitle}>Start Date</Text>\n            <TouchableOpacity onPress={() => { }} style={styles.date}>\n              <Text style={CommonStyles.sectionTitle}>\n                {selectedRange.firstDate && startDate}\n              </Text>\n            </TouchableOpacity>\n          </View>\n          <View style={styles.dateContainer}>\n            <Text style={CommonStyles.rowTitle}>End Date</Text>\n            <View style={styles.date}>\n              <Text style={CommonStyles.sectionTitle}>\n                {selectedRange.secondDate && endDate}\n              </Text>\n            </View>\n          </View>\n        </View>\n        <View style={styles.container}>\n          <DateRangePicker\n            onSelectDateRange={(range) => {\n              setRange(range);\n            }}\n            blockSingleDateSelection={true}\n            responseFormat={currentFormatString}\n            maxDate={null}\n            minDate={null} /* Removed new Date() for demo */\n            selectedDateContainerStyle={styles.selectedDateContainerStyle}\n            selectedDateStyle={styles.selectedDateStyle}\n          />\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n    <View style={styles.bottom}>\n      <View style={styles.left}>\n        <View style={styles.leftTop}>\n          <Text style={CommonStyles.sectionTitle}>RABBIT PURSE SPONSORS</Text>\n        </View>\n        <ScrollView horizontal style={{ paddingVertical: w(20), flexDirection: 'row' }}>\n          {sponsors.map((sponsor, index) => <TouchableOpacity style={{ paddingHorizontal: w(20) }} onPress={() => navigation.navigate('Sponsor', { sponsor })}>\n            <Image source={sponsor.image} style={styles.brand} />\n          </TouchableOpacity>)}\n        </ScrollView>\n      </View>\n    </View>\n    <Button title=\"CHOOSE TOURNAMENTS\" onPress={() => onSubmit()} backgroundColor={CommonColors.Green} style={{ width: '100%' }} />\n  </View>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  loading: state.tournaments.loading,\n  error: state.tournaments.error,\n});\n\nexport default connect(mapStateToProps, { getTournamentByRange, })(ChooseDates);\n\nconst styles = StyleSheet.create({\n  padding20: {\n    paddingVertical: w(20)\n  },\n  row: {\n    flexDirection: 'row',\n    paddingHorizontal: w(40)\n  },\n  dateContainer: {\n    flex: 1,\n    paddingRight: w(20),\n  },\n  date: {\n    backgroundColor: CommonColors.White,\n    padding: w(10),\n    minHeight: w(100),\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: w(20)\n  },\n  container: {\n    marginHorizontal: w(40),\n    marginVertical: w(40),\n    backgroundColor: CommonColors.White\n  },\n  selectedDateContainerStyle: {\n    height: w(60),\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: CommonColors.Green,\n  },\n  selectedDateStyle: {\n    fontWeight: \"bold\",\n    color: CommonColors.White,\n  },\n  bottom: {\n    backgroundColor: CommonColors.White,\n    paddingLeft: w(40),\n    paddingVertical: w(20),\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  brand: {\n    width: w(120),\n    height: w(50),\n    resizeMode: 'stretch',\n  },\n});"]},"metadata":{},"sourceType":"module"}