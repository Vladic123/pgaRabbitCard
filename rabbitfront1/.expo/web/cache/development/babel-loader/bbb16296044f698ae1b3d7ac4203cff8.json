{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/thinktanker/Downloads/pgaRabbitCard-master/rabbitfront1/Modules/ReEnterEmail.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { useIsFocused } from '@react-navigation/native';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { verifyEmail, clearSignUpError } from \"../store/redux/auth/actions\";\nimport { UnderlineIcon } from \"../components/icons\";\nimport { BackButton, Button, LoadingContainer } from \"../components/Button\";\nimport { regex } from \"../utils/helpers\";\nimport { w, h } from \"../utils/scale\";\nimport { CommonColors, CommonStyles } from \"./style\";\n\nvar ReEnterEmail = function ReEnterEmail(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n  var isFocused = useIsFocused();\n  var auth = useSelector(function (state) {\n    return state.auth;\n  });\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputs = _useState2[0],\n      setInputs = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errors = _useState4[0],\n      setErrors = _useState4[1];\n\n  useEffect(function () {\n    if (isFocused) {\n      dispatch(clearSignUpError());\n      setErrors({});\n    }\n  }, [isFocused]);\n\n  var _onChangeText = function onChangeText(field, value) {\n    dispatch(clearSignUpError());\n    setInputs(_objectSpread(_objectSpread({}, inputs), {}, _defineProperty({}, field, value)));\n    setErrors(_objectSpread(_objectSpread({}, errors), {}, _defineProperty({}, field, '')));\n  };\n\n  var onSubmit = function onSubmit() {\n    var errors = {};\n\n    if (!inputs.email) {\n      errors.email = 'Email is a required field';\n    }\n\n    if (!regex.email.test(inputs.email)) {\n      errors.email = 'Email is invalid';\n    }\n\n    if (Object.keys(errors).length > 0) {\n      setErrors(errors);\n    } else {\n      dispatch(verifyEmail({\n        inputs: inputs,\n        navigation: navigation,\n        nextScreen: \"Create Account\"\n      }));\n    }\n  };\n\n  return React.createElement(View, {\n    style: CommonStyles.overflowContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(BackButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), auth.loading && React.createElement(LoadingContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 24\n    }\n  }), React.createElement(SafeAreaView, {\n    style: CommonStyles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    style: CommonStyles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: [CommonStyles.padding, CommonStyles.paddingT100],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: CommonStyles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Re-enter Email\"), React.createElement(View, {\n    style: styles.padding20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, React.createElement(UnderlineIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: styles.textContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: [CommonStyles.sectionTitle, {\n      textAlign: 'center'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, \"Your email does not match existing user in our database\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Create Account');\n    },\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: [CommonStyles.sectionTitle, {\n      color: CommonColors.Green\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"Try creating an account\")), React.createElement(View, {\n    style: styles.section,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.textContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    style: CommonStyles.textInput,\n    onChangeText: function onChangeText(text) {\n      return _onChangeText('email', text.toLowerCase());\n    },\n    value: inputs.email,\n    placeholder: \"Email\",\n    keyboardType: \"email-address\",\n    placeholderTextColor: CommonColors.Dark,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), errors.email ? React.createElement(Text, {\n    style: CommonStyles.errorText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }\n  }, errors.email) : React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 94\n    }\n  })))))), React.createElement(Button, {\n    title: \"ENTER\",\n    onPress: function onPress() {\n      return onSubmit();\n    },\n    backgroundColor: CommonColors.Green,\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  verifyEmail: verifyEmail,\n  clearSignUpError: clearSignUpError\n})(ReEnterEmail);\nvar styles = StyleSheet.create({\n  padding20: {\n    paddingVertical: w(20)\n  },\n  section: {\n    paddingTop: w(100),\n    paddingHorizontal: w(60)\n  },\n  textContainer: {\n    paddingVertical: w(40)\n  },\n  row: {\n    paddingTop: w(40),\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  button: {\n    width: '100%',\n    height: w(80),\n    borderWidth: 1,\n    borderColor: CommonColors.Green,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/thinktanker/Downloads/pgaRabbitCard-master/rabbitfront1/Modules/ReEnterEmail.js"],"names":["React","useEffect","useState","useIsFocused","connect","useDispatch","useSelector","verifyEmail","clearSignUpError","UnderlineIcon","BackButton","Button","LoadingContainer","regex","w","h","CommonColors","CommonStyles","ReEnterEmail","navigation","dispatch","isFocused","auth","state","inputs","setInputs","errors","setErrors","onChangeText","field","value","onSubmit","email","test","Object","keys","length","nextScreen","overflowContainer","loading","container","padding","paddingT100","title","styles","padding20","textContainer","sectionTitle","textAlign","navigate","button","color","Green","section","textInput","text","toLowerCase","Dark","errorText","width","mapStateToProps","error","StyleSheet","create","paddingVertical","paddingTop","paddingHorizontal","row","flexDirection","alignItems","height","borderWidth","borderColor","justifyContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, TextInput, ScrollView, TouchableOpacity, SafeAreaView } from 'react-native';\nimport { useIsFocused } from '@react-navigation/native';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { verifyEmail, clearSignUpError } from '../store/redux/auth/actions';\nimport { UnderlineIcon } from '../components/icons';\nimport { BackButton, Button, LoadingContainer } from '../components/Button';\nimport { regex } from '../utils/helpers'\nimport { w, h } from '../utils/scale';\nimport { CommonColors, CommonStyles } from './style';\n\nconst ReEnterEmail = ({ navigation }) => {\n  const dispatch = useDispatch();\n  const isFocused = useIsFocused()\n  const auth = useSelector((state) => state.auth);\n  const [inputs, setInputs] = useState({});\n  const [errors, setErrors] = useState({});\n\n  useEffect(() => {\n    if (isFocused) {\n      dispatch(clearSignUpError())\n      setErrors({})\n    }\n  }, [isFocused])\n\n  const onChangeText = (field, value) => {\n    dispatch(clearSignUpError());\n    setInputs({ ...inputs, [field]: value });\n    setErrors({ ...errors, [field]: '' });\n  };\n\n  const onSubmit = () => {\n    let errors = {};\n    if (!inputs.email) {\n      errors.email = 'Email is a required field';\n    }\n    if (!regex.email.test(inputs.email)) {\n      errors.email = 'Email is invalid';\n    }\n    if (Object.keys(errors).length > 0) {\n      setErrors(errors);\n    } else {\n      dispatch(verifyEmail({ inputs, navigation, nextScreen: \"Create Account\" }));\n    }\n  };\n\n  return (\n    <View style={CommonStyles.overflowContainer}>\n      <BackButton />\n      {auth.loading && <LoadingContainer />}\n      <SafeAreaView style={CommonStyles.container}>\n        <ScrollView style={CommonStyles.container}>\n          <View style={[CommonStyles.padding, CommonStyles.paddingT100]}>\n            <Text style={CommonStyles.title}>Re-enter Email</Text>\n            <View style={styles.padding20}>\n              <UnderlineIcon />\n            </View>\n            <View style={styles.textContainer}>\n              <Text style={[CommonStyles.sectionTitle, { textAlign: 'center' }]}>\n                Your email does not match existing user in our database\n              </Text>\n            </View>\n            <TouchableOpacity onPress={() => navigation.navigate('Create Account')} style={styles.button}>\n              <Text style={[CommonStyles.sectionTitle, { color: CommonColors.Green }]}>Try creating an account</Text>\n            </TouchableOpacity>\n            <View style={styles.section}>\n              <View style={styles.textContainer}>\n                <TextInput\n                  style={CommonStyles.textInput}\n                  onChangeText={(text) => onChangeText('email', text.toLowerCase())}\n                  value={inputs.email}\n                  placeholder=\"Email\"\n                  keyboardType=\"email-address\"\n                  placeholderTextColor={CommonColors.Dark}\n                />\n                {errors.email ? <Text style={CommonStyles.errorText}>{errors.email}</Text> : <View />}\n              </View>\n            </View>\n          </View>\n        </ScrollView>\n      </SafeAreaView>\n      <Button title=\"ENTER\" onPress={() => onSubmit()} backgroundColor={CommonColors.Green} style={{ width: '100%' }} />\n    </View>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  loading: state.auth.loading,\n  error: state.auth.error,\n});\n\nexport default connect(mapStateToProps, { verifyEmail, clearSignUpError })(ReEnterEmail);\n\nconst styles = StyleSheet.create({\n  padding20: {\n    paddingVertical: w(20)\n  },\n  section: {\n    paddingTop: w(100),\n    paddingHorizontal: w(60),\n  },\n  textContainer: {\n    paddingVertical: w(40)\n  },\n  row: {\n    paddingTop: w(40),\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  button: {\n    width: '100%',\n    height: w(80),\n    borderWidth: 1,\n    borderColor: CommonColors.Green,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});"]},"metadata":{},"sourceType":"module"}